.TH "vertex" 3 "Tue Jun 7 2022" "Version 1.9" "GraphicsEngine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vertex
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "std::array< VkVertexInputAttributeDescription, 4 > \fBgetVertexInputAttributeDesc\fP ()"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "std::array< VkVertexInputAttributeDescription, 4 > vertex::getVertexInputAttributeDesc ()"

.PP
Definition at line \fB20\fP of file \fBVertex\&.cpp\fP\&.
.PP
.nf
20                                                                              {
21   std::array<VkVertexInputAttributeDescription, 4> attribute_describtions;
22 
23   // Position attribute
24   attribute_describtions[0]\&.binding = 0;
25   attribute_describtions[0]\&.location = 0;
26   attribute_describtions[0]\&.format =
27       VK_FORMAT_R32G32B32_SFLOAT;  // format data will take (also helps define
28                                    // size of data)
29   attribute_describtions[0]\&.offset = offsetof(Vertex, pos);
30 
31   // normal coord attribute
32   attribute_describtions[1]\&.binding = 0;
33   attribute_describtions[1]\&.location = 1;
34   attribute_describtions[1]\&.format =
35       VK_FORMAT_R32G32B32_SFLOAT;  // format data will take (also helps define
36                                    // size of data)
37   attribute_describtions[1]\&.offset =
38       offsetof(Vertex, normal);  // where this attribute is defined in the data
39                                  // for a single vertex
40 
41   // normal coord attribute
42   attribute_describtions[2]\&.binding = 0;
43   attribute_describtions[2]\&.location = 2;
44   attribute_describtions[2]\&.format =
45       VK_FORMAT_R32G32B32_SFLOAT;  // format data will take (also helps define
46                                    // size of data)
47   attribute_describtions[2]\&.offset = offsetof(Vertex, color);
48 
49   attribute_describtions[3]\&.binding = 0;
50   // texture coord attribute
51   attribute_describtions[3]\&.location = 3;
52   attribute_describtions[3]\&.format =
53       VK_FORMAT_R32G32_SFLOAT;  // format data will take (also helps define size
54                                 // of data)
55   attribute_describtions[3]\&.offset =
56       offsetof(Vertex, texture_coords);  // where this attribute is defined in
57                                          // the data for a single vertex
58 
59   return attribute_describtions;
60 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for GraphicsEngine from the source code\&.
