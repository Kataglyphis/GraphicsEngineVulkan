ImVec2
ImVec2
operator[] call:[assert,return]
operator[] call:[assert,return]
ImVec4
ImVec4
operatornew
operatordelete
IM_DELETE call:[MemFree,T] noreturn:[MemFree]
SelectAll
ClearSelection
HasSelection
ImGuiPayload call:[Clear] noreturn:[Clear]
Clear call:[memset,sizeof]
IsDataType call:[strcmp]
IsPreview
IsDelivery
ImGuiTableColumnSortSpecs call:[memset,sizeof] noreturn:[memset]
ImGuiTableSortSpecs call:[memset,sizeof] noreturn:[memset]
ImGuiOnceUponAFrame
operatorbool call:[GetFrameCount]
Clear call:[Build] noreturn:[Build]
IsActive call:[empty] noreturn:[empty]
ImGuiTextRange
ImGuiTextRange
empty
ImGuiTextBuffer
operator[] call:[assert]
begin call:[front]
end call:[back]
size
empty
clear call:[clear] noreturn:[clear]
reserve call:[reserve] noreturn:[reserve]
c_str
ImGuiStoragePair
ImGuiStoragePair
ImGuiStoragePair
Clear call:[clear] noreturn:[clear]
ImGuiListClipper call:[Begin,memset,sizeof] noreturn:[Begin]
ImColor
ImColor
ImColor
ImColor
ImColor
operatorint call:[ColorConvertFloat4ToU32] noreturn:[ColorConvertFloat4ToU32]
operatorImVec4
SetHSV call:[ColorConvertHSVtoRGB]
HSV call:[ColorConvertHSVtoRGB,ImColor] noreturn:[ImColor]
ImDrawCmd call:[memset,sizeof] noreturn:[memset]
GetTexID
ImDrawListSplitter call:[memset,sizeof] noreturn:[memset]
ImDrawListSplitter call:[ClearFreeMemory] noreturn:[ClearFreeMemory]
Clear
ImDrawList call:[memset,sizeof]
ImDrawList call:[_ClearFreeMemory] noreturn:[_ClearFreeMemory]
GetClipRectMin call:[ImVec2,back] noreturn:[ImVec2]
GetClipRectMax call:[ImVec2,back] noreturn:[ImVec2]
PathClear
PathLineTo call:[push_back] noreturn:[push_back]
PathLineToMergeDuplicate call:[memcmp,push_back] noreturn:[push_back]
PathFillConvex call:[AddConvexPolyFilled]
PathStroke call:[AddPolyline]
ChannelsSplit call:[Split] noreturn:[Split]
ChannelsMerge call:[Merge] noreturn:[Merge]
ChannelsSetCurrent call:[SetCurrentChannel] noreturn:[SetCurrentChannel]
PrimWriteVtx
PrimWriteIdx
PrimVtx call:[PrimWriteIdx,PrimWriteVtx] noreturn:[PrimWriteVtx]
AddBezierCurve call:[AddBezierCubic] noreturn:[AddBezierCubic]
PathBezierCurveTo call:[PathBezierCubicCurveTo] noreturn:[PathBezierCubicCurveTo]
ImDrawData call:[Clear] noreturn:[Clear]
Clear call:[memset,sizeof] noreturn:[memset]
ImFontGlyphRangesBuilder call:[Clear] noreturn:[Clear]
Clear call:[memset,resize,sizeof] noreturn:[memset]
GetBit call:[return]
SetBit
AddChar call:[SetBit] noreturn:[SetBit]
ImFontAtlasCustomRect call:[ImVec2]
IsPacked
IsBuilt
SetTexID
GetCustomRectByIndex call:[assert]
GetCharAdvance call:[return]
IsLoaded
GetDebugName
ImGuiViewport call:[memset,sizeof] noreturn:[memset]
GetCenter call:[ImVec2] noreturn:[ImVec2]
GetWorkCenter call:[ImVec2] noreturn:[ImVec2]
ImGuiPlatformImeData call:[memset,sizeof] noreturn:[memset]
GetWindowContentRegionWidth call:[GetWindowContentRegionMax,GetWindowContentRegionMin]
ListBoxHeader call:[BeginListBox] noreturn:[BeginListBox]
ListBoxFooter call:[EndListBox] noreturn:[EndListBox]
OpenPopupContextItem call:[OpenPopupOnItemClick] noreturn:[OpenPopupOnItemClick]
DragFloat call:[DragScalar] noreturn:[DragScalar]
DragFloat2 call:[DragScalarN] noreturn:[DragScalarN]
DragFloat3 call:[DragScalarN] noreturn:[DragScalarN]
DragFloat4 call:[DragScalarN] noreturn:[DragScalarN]
SliderFloat call:[SliderScalar] noreturn:[SliderScalar]
SliderFloat2 call:[SliderScalarN] noreturn:[SliderScalarN]
SliderFloat3 call:[SliderScalarN] noreturn:[SliderScalarN]
SliderFloat4 call:[SliderScalarN] noreturn:[SliderScalarN]
BeginPopupContextWindow call:[BeginPopupContextWindow] noreturn:[BeginPopupContextWindow]
ImQsort call:[qsort] noreturn:[qsort]
ImIsPowerOfTwo
ImIsPowerOfTwo
ImUpperPowerOfTwo
ImCharIsBlankA
ImCharIsBlankW
operator* call:[ImVec2] noreturn:[ImVec2]
operator/ call:[ImVec2] noreturn:[ImVec2]
operator+ call:[ImVec2] noreturn:[ImVec2]
operator- call:[ImVec2] noreturn:[ImVec2]
operator* call:[ImVec2] noreturn:[ImVec2]
operator/ call:[ImVec2] noreturn:[ImVec2]
operator*=
operator/=
operator+=
operator-=
operator*=
operator/=
operator+ call:[ImVec4] noreturn:[ImVec4]
operator- call:[ImVec4] noreturn:[ImVec4]
operator* call:[ImVec4] noreturn:[ImVec4]
ImPow call:[powf] noreturn:[powf]
ImPow call:[pow] noreturn:[pow]
ImLog call:[logf] noreturn:[logf]
ImLog call:[log] noreturn:[log]
ImAbs
ImAbs call:[fabsf] noreturn:[fabsf]
ImAbs call:[fabs] noreturn:[fabs]
ImSign call:[return]
ImSign call:[return]
ImRsqrt call:[sqrtf] noreturn:[sqrtf]
ImRsqrt call:[sqrt] noreturn:[sqrt]
ImMin
ImMax
ImClamp call:[return]
ImLerp call:[return]
ImSwap
ImAddClampOverflow
ImSubClampOverflow
ImMin call:[ImVec2] noreturn:[ImVec2]
ImMax call:[ImVec2] noreturn:[ImVec2]
ImClamp call:[ImVec2] noreturn:[ImVec2]
ImLerp call:[ImVec2] noreturn:[ImVec2]
ImLerp call:[ImVec2] noreturn:[ImVec2]
ImLerp call:[ImVec4] noreturn:[ImVec4]
ImSaturate call:[return]
ImLengthSqr call:[return]
ImLengthSqr call:[return]
ImInvLength call:[ImRsqrt] noreturn:[ImRsqrt]
ImFloor call:[return]
ImFloorSigned call:[return]
ImFloor call:[ImVec2] noreturn:[ImVec2]
ImFloorSigned call:[ImFloorSigned,ImVec2] noreturn:[ImVec2]
ImModPositive call:[return]
ImDot
ImRotate call:[ImVec2] noreturn:[ImVec2]
ImLinearSweep call:[ImMax,ImMin] noreturn:[ImMax,ImMin]
ImMul call:[ImVec2] noreturn:[ImVec2]
ImIsFloatAboveGuaranteedIntegerPrecision
ImTriangleArea call:[fabsf]
ImVec1
ImVec1
ImVec2ih
ImVec2ih
ImVec2ih
ImRect
ImRect
ImRect
ImRect
GetCenter call:[ImVec2] noreturn:[ImVec2]
GetSize call:[ImVec2] noreturn:[ImVec2]
GetWidth
GetHeight
GetArea call:[return]
GetTL
GetTR call:[ImVec2] noreturn:[ImVec2]
GetBL call:[ImVec2] noreturn:[ImVec2]
GetBR
Contains
Contains
Overlaps
Add
Add
Expand
Expand
Translate
TranslateX
TranslateY
ClipWith call:[ImMax,ImMin] noreturn:[ImMin]
ClipWithFull call:[ImClamp] noreturn:[ImClamp]
Floor
IsInverted
ToVec4 call:[ImVec4] noreturn:[ImVec4]
ImBitArrayTestBit call:[return]
ImBitArrayClearBit
ImBitArraySetBit
ImBitArraySetBitRange
Create call:[memset,resize,sizeof] noreturn:[memset]
Clear call:[clear] noreturn:[clear]
TestBit call:[ImBitArrayTestBit,assert] noreturn:[ImBitArrayTestBit]
SetBit call:[ImBitArraySetBit,assert] noreturn:[ImBitArraySetBit]
ClearBit call:[ImBitArrayClearBit,assert] noreturn:[ImBitArrayClearBit]
ImSpanAllocator call:[memset,sizeof] noreturn:[memset]
Reserve call:[assert]
GetArenaSizeInBytes
SetArenaBasePtr
GetSpanPtrBegin call:[assert,return]
GetSpanPtrEnd call:[assert,return]
GetSpan call:[GetSpanPtrBegin,GetSpanPtrEnd,set] noreturn:[set]
Clear call:[resize,sizeof] noreturn:[resize]
ClearFreeMemory call:[clear,sizeof] noreturn:[clear]
GetDrawListCount call:[sizeof]
ImGuiStyleMod
ImGuiStyleMod
ImGuiStyleMod
ImGuiComboPreviewData call:[memset,sizeof] noreturn:[memset]
ImGuiMenuColumns call:[memset,sizeof] noreturn:[memset]
ImGuiInputTextState call:[memset,sizeof] noreturn:[memset]
ClearText call:[CursorClamp] noreturn:[CursorClamp]
ClearFreeMemory call:[clear] noreturn:[clear]
GetUndoAvailCount
GetRedoAvailCount
CursorAnimReset
CursorClamp call:[ImMin] noreturn:[ImMin]
HasSelection
ClearSelection
GetCursorPos
GetSelectionStart
GetSelectionEnd
SelectAll
ImGuiPopupData call:[memset,sizeof]
ImGuiNextWindowData call:[memset,sizeof] noreturn:[memset]
ClearFlags
ImGuiNextItemData call:[memset,sizeof] noreturn:[memset]
ClearFlags
ImGuiLastItemData call:[memset,sizeof] noreturn:[memset]
ImGuiStackSizes call:[memset,sizeof] noreturn:[memset]
ImGuiPtrOrIndex
ImGuiPtrOrIndex
ImGuiInputEvent call:[memset,sizeof] noreturn:[memset]
FromIndices
FromPositions
ImGuiListClipperData call:[memset,sizeof] noreturn:[memset]
Reset call:[resize] noreturn:[resize]
ImGuiNavItemData call:[Clear] noreturn:[Clear]
Clear
ImGuiOldColumnData call:[memset,sizeof] noreturn:[memset]
ImGuiOldColumns call:[memset,sizeof] noreturn:[memset]
ImGuiViewportP
ImGuiViewportP call:[IM_DELETE] noreturn:[IM_DELETE]
CalcWorkRectPos call:[ImVec2] noreturn:[ImVec2]
CalcWorkRectSize call:[ImMax,ImVec2] noreturn:[ImVec2]
UpdateWorkRect call:[CalcWorkRectPos,CalcWorkRectSize] noreturn:[CalcWorkRectSize]
GetMainRect call:[ImRect] noreturn:[ImRect]
GetWorkRect call:[ImRect] noreturn:[ImRect]
GetBuildWorkRect call:[CalcWorkRectPos,CalcWorkRectSize,ImRect] noreturn:[ImRect]
ImGuiWindowSettings call:[memset,sizeof] noreturn:[memset]
GetName call:[return]
ImGuiSettingsHandler call:[memset,sizeof] noreturn:[memset]
ImGuiMetricsConfig
ImGuiStackLevelInfo call:[memset,sizeof] noreturn:[memset]
ImGuiStackTool call:[memset,sizeof]
ImGuiContextHook call:[memset,sizeof] noreturn:[memset]
ImGuiContext call:[ClearAllBits,ImFontAtlas,ImNewWrapper,ImVec2,MemAlloc,memset,new,sizeof] noreturn:[memset]
Rect call:[ImRect] noreturn:[ImRect]
CalcFontSize global:[GImGui]
TitleBarHeight global:[GImGui] call:[CalcFontSize,return]
TitleBarRect call:[ImRect,ImVec2,TitleBarHeight] noreturn:[ImRect]
MenuBarHeight global:[GImGui] call:[CalcFontSize,return]
MenuBarRect call:[ImRect,MenuBarHeight,TitleBarHeight] noreturn:[ImRect]
ImGuiTabItem call:[memset,sizeof]
GetTabOrder call:[index_from_ptr] noreturn:[index_from_ptr]
GetTabName call:[assert]
ImGuiTableColumn call:[memset,sizeof]
ImGuiTableInstanceData
ImGuiTable call:[memset,sizeof]
ImGuiTable call:[MemFree] noreturn:[MemFree]
ImGuiTableTempData call:[memset,sizeof]
ImGuiTableColumnSettings
ImGuiTableSettings call:[memset,sizeof] noreturn:[memset]
GetColumnSettings call:[return]
GetCurrentWindowRead global:[GImGui]
GetCurrentWindow global:[GImGui]
WindowRectAbsToRel call:[ImRect] noreturn:[ImRect]
WindowRectRelToAbs call:[ImRect] noreturn:[ImRect]
GetDefaultFont global:[GImGui]
GetForegroundDrawList call:[GetForegroundDrawList] noreturn:[GetForegroundDrawList]
ScrollToBringRectIntoView call:[ScrollToRect] noreturn:[ScrollToRect]
GetItemID global:[GImGui]
GetItemStatusFlags global:[GImGui]
GetItemFlags global:[GImGui]
GetActiveID global:[GImGui]
GetFocusID global:[GImGui]
ItemSize call:[GetSize,ItemSize] noreturn:[ItemSize]
FocusableItemRegister call:[assert]
FocusableItemUnregister call:[assert]
GetFocusedFocusScope global:[GImGui]
GetFocusScope global:[GImGui]
IsNamedKey
IsLegacyKey
IsGamepadKey
IsActiveIdUsingNavDir global:[GImGui] call:[return]
IsActiveIdUsingNavInput global:[GImGui] call:[return]
IsActiveIdUsingKey global:[GImGui]
SetActiveIdUsingKey global:[GImGui] call:[SetBit] noreturn:[SetBit]
IsNavInputDown global:[GImGui]
IsNavInputTest call:[GetNavInputAmount,return] noreturn:[return]
IsKeyPressedMap call:[IsKeyPressed,IsNamedKey,assert] noreturn:[IsKeyPressed]
GetCurrentTable global:[GImGui]
TableGetInstanceData
TempInputIsActive global:[GImGui] call:[return] noreturn:[return]
GetInputTextState global:[GImGui] call:[return]
DebugDrawItemRect global:[GImGui] call:[AddRect,GetForegroundDrawList] noreturn:[AddRect]
DebugStartItemPicker global:[GImGui]
TextEx global:[GImGui] call:[CalcTextSize,CalcWrapWidthForPos,GetCurrentWindow,GetTextLineHeight,ImMax,ImVec2,IsClippedEx,ItemAdd,ItemSize,RenderText,RenderTextWrapped,bb,line_rect,memchr,strlen,text_pos,text_size] noreturn:[ImMax,ItemAdd,RenderTextWrapped,strlen]
TextUnformatted call:[TextEx] noreturn:[TextEx]
Text call:[TextV,va_end,va_start] noreturn:[va_end]
TextV global:[GImGui] call:[GetCurrentWindow,ImFormatStringV,TextEx,sizeof] noreturn:[TextEx]
TextColored call:[TextColoredV,va_end,va_start] noreturn:[va_end]
TextColoredV call:[PopStyleColor,PushStyleColor,TextEx,TextV,va_arg] noreturn:[PopStyleColor,TextEx,TextV]
TextDisabled call:[TextDisabledV,va_end,va_start] noreturn:[va_end]
TextDisabledV global:[GImGui] call:[PopStyleColor,PushStyleColor,TextEx,TextV,va_arg] noreturn:[PopStyleColor,TextEx,TextV]
TextWrapped call:[TextWrappedV,va_end,va_start] noreturn:[va_end]
TextWrappedV global:[GImGui] call:[PopTextWrapPos,PushTextWrapPos,TextEx,TextV,va_arg] noreturn:[PopTextWrapPos,PushTextWrapPos,TextEx,TextV]
LabelText call:[LabelTextV,va_end,va_start] noreturn:[va_end]
LabelTextV global:[GImGui] call:[CalcItemWidth,CalcTextSize,GetCurrentWindow,ImFormatStringV,ImMax,ImVec2,ItemAdd,ItemSize,RenderText,RenderTextClipped,sizeof,total_bb,value_bb] noreturn:[RenderText]
BulletText call:[BulletTextV,va_end,va_start] noreturn:[va_end]
BulletTextV global:[GImGui] call:[CalcTextSize,GetColorU32,GetCurrentWindow,ImFormatStringV,ImVec2,ItemAdd,ItemSize,RenderBullet,RenderText,bb,sizeof] noreturn:[RenderText]
ButtonBehavior global:[DRAGDROP_HOLD_TO_OPEN_TIMER,GImGui] call:[ClearActiveID,FocusWindow,GetCurrentWindow,IsItemHovered,IsMouseClicked,IsNavInputTest,ItemHoverable,SetActiveID,SetFocusID,SetHoveredID,assert] noreturn:[ClearActiveID,FocusWindow,SetActiveID,SetFocusID]
ButtonEx global:[GImGui] call:[ButtonBehavior,CalcItemSize,CalcTextSize,GetColorU32,GetCurrentWindow,GetID,ItemAdd,ItemSize,LogSetNextTextDecoration,RenderFrame,RenderNavHighlight,RenderTextClipped,bb] noreturn:[LogSetNextTextDecoration]
SmallButton global:[GImGui] call:[ButtonEx,ImVec2]
InvisibleButton global:[GImGui] call:[ButtonBehavior,CalcItemSize,GetCurrentWindow,GetID,ItemAdd,ItemSize,assert,bb]
ArrowButtonEx global:[GImGui] call:[ButtonBehavior,GetColorU32,GetCurrentWindow,GetFrameHeight,GetID,ImMax,ImVec2,ItemAdd,ItemSize,RenderArrow,RenderFrame,RenderNavHighlight,bb]
ArrowButton call:[ArrowButtonEx,GetFrameHeight,ImVec2] noreturn:[ArrowButtonEx]
CloseButton global:[GImGui] call:[AddCircleFilled,AddLine,ButtonBehavior,Expand,GetArea,GetCenter,GetColorU32,GetSize,ImFloor,ImMax,ImVec2,ItemAdd,bb] noreturn:[AddCircleFilled,Expand]
CollapseButton global:[GImGui] call:[AddCircleFilled,ButtonBehavior,GetCenter,GetColorU32,ImVec2,IsItemActive,IsMouseDragging,ItemAdd,RenderArrow,StartMouseMovingWindow,bb] noreturn:[AddCircleFilled,StartMouseMovingWindow]
GetWindowScrollbarID call:[GetID] noreturn:[GetID]
GetWindowScrollbarRect call:[ImMax,ImRect,Rect,assert] noreturn:[ImRect]
Scrollbar global:[GImGui] call:[GetWindowScrollbarID,GetWindowScrollbarRect,KeepAliveID,ScrollbarEx]
ScrollbarEx global:[GImGui] call:[AddRectFilled,ButtonBehavior,Expand,GetColorU32,GetHeight,GetWidth,ImClamp,ImLerp,ImMax,ImRect,ImSaturate,ImVec2,SetHoveredID,assert] noreturn:[ImRect,ImSaturate]
Image call:[AddImage,AddRect,GetColorU32,GetCurrentWindow,ImVec2,ItemAdd,ItemSize,bb] noreturn:[AddImage,ImVec2]
ImageButtonEx global:[GImGui] call:[AddImage,AddRectFilled,ButtonBehavior,GetColorU32,GetCurrentWindow,ImClamp,ImMin,ItemAdd,ItemSize,RenderFrame,RenderNavHighlight,bb] noreturn:[AddRectFilled]
ImageButton global:[GImGui] call:[GetID,ImVec2,ImageButtonEx,PopID,PushID] noreturn:[ImageButtonEx]
Checkbox global:[GImGui] call:[AddRectFilled,ButtonBehavior,CalcTextSize,GetColorU32,GetCurrentWindow,GetFrameHeight,GetID,ImMax,ImVec2,ItemAdd,ItemSize,LogRenderedText,MarkItemEdited,RenderCheckMark,RenderFrame,RenderNavHighlight,RenderText,check_bb,pad,total_bb] noreturn:[AddRectFilled,LogRenderedText,MarkItemEdited,RenderCheckMark,RenderText]
CheckboxFlagsT global:[GImGui] call:[Checkbox] noreturn:[Checkbox]
CheckboxFlags call:[CheckboxFlagsT] noreturn:[CheckboxFlagsT]
CheckboxFlags call:[CheckboxFlagsT] noreturn:[CheckboxFlagsT]
CheckboxFlags call:[CheckboxFlagsT] noreturn:[CheckboxFlagsT]
CheckboxFlags call:[CheckboxFlagsT] noreturn:[CheckboxFlagsT]
RadioButton global:[GImGui] call:[AddCircle,AddCircleFilled,ButtonBehavior,CalcTextSize,GetCenter,GetColorU32,GetCurrentWindow,GetFrameHeight,GetID,ImMax,ImVec2,ItemAdd,ItemSize,LogRenderedText,MarkItemEdited,RenderNavHighlight,RenderText,check_bb,total_bb] noreturn:[AddCircle,AddCircleFilled,LogRenderedText,MarkItemEdited,RenderText]
RadioButton call:[RadioButton]
ProgressBar global:[GImGui] call:[CalcItemSize,CalcItemWidth,CalcTextSize,Expand,GetColorU32,GetCurrentWindow,ImClamp,ImFormatString,ImLerp,ImSaturate,ImVec2,ItemAdd,ItemSize,RenderFrame,RenderRectFilledRangeH,RenderTextClipped,bb,sizeof] noreturn:[RenderTextClipped]
Bullet global:[GImGui] call:[GetColorU32,GetCurrentWindow,ImMax,ImMin,ImVec2,ItemAdd,ItemSize,RenderBullet,SameLine,bb] noreturn:[SameLine]
Spacing call:[GetCurrentWindow,ImVec2,ItemSize] noreturn:[ItemSize]
Dummy call:[GetCurrentWindow,ItemAdd,ItemSize,bb] noreturn:[ItemAdd]
NewLine global:[GImGui] call:[GetCurrentWindow,ImVec2,ItemSize] noreturn:[ItemSize]
AlignTextToFramePadding global:[GImGui] call:[GetCurrentWindow,ImMax] noreturn:[ImMax]
SeparatorEx global:[GImGui] call:[AddLine,GetColorU32,GetCurrentWindow,ImIsPowerOfTwo,ImVec2,ItemAdd,ItemSize,LogRenderedText,LogText,PopColumnsBackground,PushColumnsBackground,assert,back,bb] noreturn:[LogRenderedText,LogText,PushColumnsBackground]
Separator global:[GImGui] call:[SeparatorEx] noreturn:[SeparatorEx]
SplitterBehavior global:[GImGui] call:[AddRectFilled,ButtonBehavior,Expand,GetColorU32,ImMax,ImVec2,ItemAdd,MarkItemEdited,SetItemAllowOverlap,SetMouseCursor,Translate,assert] noreturn:[MarkItemEdited,SetItemAllowOverlap,SetMouseCursor,assert]
ShrinkWidthItemComparer call:[return] noreturn:[return]
ShrinkWidths call:[ImFloor,ImMax,ImMin,ImQsort,sizeof] noreturn:[ImMax]
CalcMaxPopupHeightFromItemCount global:[GImGui] call:[return]
BeginCombo global:[GImGui] call:[AddRectFilled,BeginComboPopup,ButtonBehavior,CalcItemWidth,CalcTextSize,ClearFlags,GetColorU32,GetCurrentWindow,GetFrameHeight,GetID,ImHashStr,ImMax,ImRect,ImVec2,IsPopupOpen,ItemAdd,ItemSize,LogSetNextTextDecoration,OpenPopupEx,RenderArrow,RenderFrameBorder,RenderNavHighlight,RenderText,RenderTextClipped,assert,bb,total_bb] noreturn:[AddRectFilled,BeginComboPopup,LogSetNextTextDecoration,RenderArrow,RenderText,RenderTextClipped]
BeginComboPopup global:[GImGui] call:[Begin,CalcMaxPopupHeightFromItemCount,CalcWindowNextAutoFitSize,ClearFlags,EndPopup,FindBestWindowPosForPopupEx,FindWindowByName,GetBL,GetPopupAllowedExtentRect,GetWidth,ImFormatString,ImIsPowerOfTwo,ImMax,ImVec2,IsPopupOpen,PopStyleVar,PushStyleVar,SetNextWindowPos,SetNextWindowSizeConstraints,assert,sizeof] noreturn:[ImMax,SetNextWindowPos,SetNextWindowSizeConstraints]
EndCombo call:[EndPopup] noreturn:[EndPopup]
BeginComboPreview global:[GImGui] call:[Contains,Overlaps,PushClipRect,assert]
EndComboPreview global:[GImGui] call:[ImMax,ImRect,PopClipRect,_TryMergeDrawCmds] noreturn:[ImRect,_TryMergeDrawCmds]
Items_ArrayGetter
Items_SingleStringGetter call:[strlen]
Combo global:[GImGui] call:[BeginCombo,CalcMaxPopupHeightFromItemCount,EndCombo,ImVec2,MarkItemEdited,PopID,PushID,Selectable,SetItemDefaultFocus,SetNextWindowSizeConstraints,items_getter] noreturn:[MarkItemEdited,PopID,SetItemDefaultFocus,SetNextWindowSizeConstraints,items_getter]
Combo call:[Combo]
Combo call:[Combo,strlen]
PatchFormatStringFloatToInt global:[GImGui] call:[ImFormatString,ImParseFormatFindEnd,ImParseFormatFindStart,sizeof]
DataTypeGetInfo global:[GDataTypeInfo] call:[assert]
DataTypeFormatString call:[ImFormatString,assert] noreturn:[ImFormatString]
DataTypeApplyOp global:[IM_S16_MAX,IM_S16_MIN,IM_S32_MAX,IM_S32_MIN,IM_S64_MAX,IM_S64_MIN,IM_S8_MAX,IM_S8_MIN,IM_U16_MAX,IM_U16_MIN,IM_U32_MAX,IM_U32_MIN,IM_U64_MAX,IM_U64_MIN,IM_U8_MAX,IM_U8_MIN] call:[ImAddClampOverflow,ImSubClampOverflow,assert] noreturn:[ImAddClampOverflow,ImSubClampOverflow,assert]
DataTypeApplyFromText global:[IM_S16_MAX,IM_S16_MIN,IM_S8_MAX,IM_S8_MIN,IM_U16_MAX,IM_U16_MIN,IM_U8_MAX,IM_U8_MIN] call:[DataTypeGetInfo,ImCharIsBlankA,ImClamp,ImParseFormatSanitizeForScanning,assert,memcmp,memcpy,sizeof,sscanf] noreturn:[ImClamp,ImParseFormatSanitizeForScanning,assert]
DataTypeCompare call:[DataTypeCompareT < double >,DataTypeCompareT < float >,DataTypeCompareT < signed char >,DataTypeCompareT < signed int >,DataTypeCompareT < signed long long >,DataTypeCompareT < signed short >,DataTypeCompareT < unsigned char >,DataTypeCompareT < unsigned int >,DataTypeCompareT < unsigned long long >,DataTypeCompareT < unsigned short >,assert]
DataTypeClamp call:[DataTypeClampT < double >,DataTypeClampT < float >,DataTypeClampT < signed char >,DataTypeClampT < signed int >,DataTypeClampT < signed long long >,DataTypeClampT < signed short >,DataTypeClampT < unsigned char >,DataTypeClampT < unsigned int >,DataTypeClampT < unsigned long long >,DataTypeClampT < unsigned short >,assert]
GetMinimumStepAtDecimalPrecision call:[ImPow,return,sizeof] noreturn:[ImPow]
DragBehavior global:[GImGui,IM_S16_MAX,IM_S16_MIN,IM_S32_MAX,IM_S32_MIN,IM_S64_MAX,IM_S64_MIN,IM_S8_MAX,IM_S8_MIN,IM_U16_MAX,IM_U16_MIN,IM_U32_MAX,IM_U32_MIN,IM_U64_MAX,IM_U64_MIN,IM_U8_MAX,IM_U8_MIN] call:[ClearActiveID,DragBehaviorT < double , double , double >,DragBehaviorT < float , float , float >,DragBehaviorT < signed int , signed int , float >,DragBehaviorT < signed long long , signed long long , double >,DragBehaviorT < unsigned int , signed int , float >,DragBehaviorT < unsigned long long , signed long long , double >,assert] noreturn:[ClearActiveID]
DragScalar global:[DRAG_MOUSE_THRESHOLD_FACTOR,GImGui] call:[CalcItemWidth,CalcTextSize,DataTypeCompare,DataTypeFormatString,DataTypeGetInfo,DragBehavior,FocusWindow,GetColorU32,GetCurrentWindow,GetID,ImVec2,IsMouseDragPastThreshold,ItemAdd,ItemHoverable,ItemSize,LogSetNextTextDecoration,MarkItemEdited,PatchFormatStringFloatToInt,RenderFrame,RenderNavHighlight,RenderText,RenderTextClipped,SetActiveID,SetFocusID,TempInputIsActive,TempInputScalar,frame_bb,sizeof,strcmp,total_bb] noreturn:[LogSetNextTextDecoration,MarkItemEdited,PatchFormatStringFloatToInt,RenderText,TempInputScalar]
DragScalarN global:[GDataTypeInfo,GImGui] call:[BeginGroup,CalcItemWidth,DragScalar,EndGroup,FindRenderedTextEnd,GetCurrentWindow,PopID,PopItemWidth,PushID,PushMultiItemsWidths,SameLine,TextEx] noreturn:[SameLine,TextEx]
DragFloat call:[DragScalar] noreturn:[DragScalar]
DragFloat2 call:[DragScalarN] noreturn:[DragScalarN]
DragFloat3 call:[DragScalarN] noreturn:[DragScalarN]
DragFloat4 call:[DragScalarN] noreturn:[DragScalarN]
DragFloatRange2 global:[GImGui] call:[BeginGroup,CalcItemWidth,DragScalar,EndGroup,FindRenderedTextEnd,GetCurrentWindow,ImMax,ImMin,PopID,PopItemWidth,PushID,PushMultiItemsWidths,SameLine,TextEx]
DragInt call:[DragScalar] noreturn:[DragScalar]
DragInt2 call:[DragScalarN] noreturn:[DragScalarN]
DragInt3 call:[DragScalarN] noreturn:[DragScalarN]
DragInt4 call:[DragScalarN] noreturn:[DragScalarN]
DragIntRange2 global:[GImGui] call:[BeginGroup,CalcItemWidth,DragInt,EndGroup,FindRenderedTextEnd,GetCurrentWindow,ImMax,ImMin,PopID,PopItemWidth,PushID,PushMultiItemsWidths,SameLine,TextEx]
DragScalar call:[DragScalar,assert] noreturn:[DragScalar]
DragScalarN call:[DragScalarN,assert] noreturn:[DragScalarN]
SliderBehavior global:[GImGui,IM_S32_MAX,IM_S32_MIN,IM_S64_MAX,IM_S64_MIN,IM_U32_MAX,IM_U64_MAX] call:[SliderBehaviorT < double , double , double >,SliderBehaviorT < float , float , float >,SliderBehaviorT < signed int , signed int , float >,SliderBehaviorT < signed long long , signed long long , double >,SliderBehaviorT < unsigned int , signed int , float >,SliderBehaviorT < unsigned long long , signed long long , double >,assert]
SliderScalar global:[GImGui] call:[AddRectFilled,CalcItemWidth,CalcTextSize,DataTypeFormatString,DataTypeGetInfo,FocusWindow,GetColorU32,GetCurrentWindow,GetID,ImVec2,ItemAdd,ItemHoverable,ItemSize,LogSetNextTextDecoration,MarkItemEdited,PatchFormatStringFloatToInt,RenderFrame,RenderNavHighlight,RenderText,RenderTextClipped,SetActiveID,SetFocusID,SliderBehavior,TempInputIsActive,TempInputScalar,frame_bb,sizeof,strcmp,total_bb] noreturn:[AddRectFilled,LogSetNextTextDecoration,MarkItemEdited,PatchFormatStringFloatToInt,RenderText,TempInputScalar]
SliderScalarN global:[GDataTypeInfo,GImGui] call:[BeginGroup,CalcItemWidth,EndGroup,FindRenderedTextEnd,GetCurrentWindow,PopID,PopItemWidth,PushID,PushMultiItemsWidths,SameLine,SliderScalar,TextEx] noreturn:[SameLine,TextEx]
SliderFloat call:[SliderScalar] noreturn:[SliderScalar]
SliderFloat2 call:[SliderScalarN] noreturn:[SliderScalarN]
SliderFloat3 call:[SliderScalarN] noreturn:[SliderScalarN]
SliderFloat4 call:[SliderScalarN] noreturn:[SliderScalarN]
SliderAngle call:[SliderFloat]
SliderInt call:[SliderScalar] noreturn:[SliderScalar]
SliderInt2 call:[SliderScalarN] noreturn:[SliderScalarN]
SliderInt3 call:[SliderScalarN] noreturn:[SliderScalarN]
SliderInt4 call:[SliderScalarN] noreturn:[SliderScalarN]
VSliderScalar global:[GImGui] call:[AddRectFilled,CalcTextSize,DataTypeFormatString,DataTypeGetInfo,FocusWindow,GetColorU32,GetCurrentWindow,GetID,ImVec2,ItemAdd,ItemHoverable,ItemSize,MarkItemEdited,PatchFormatStringFloatToInt,RenderFrame,RenderNavHighlight,RenderText,RenderTextClipped,SetActiveID,SetFocusID,SliderBehavior,bb,frame_bb,sizeof,strcmp] noreturn:[AddRectFilled,MarkItemEdited,PatchFormatStringFloatToInt,RenderText]
VSliderFloat call:[VSliderScalar] noreturn:[VSliderScalar]
VSliderInt call:[VSliderScalar] noreturn:[VSliderScalar]
SliderScalar call:[SliderScalar,assert] noreturn:[SliderScalar]
SliderScalarN call:[SliderScalarN,assert] noreturn:[SliderScalarN]
ImParseFormatFindStart
ImParseFormatFindEnd
ImParseFormatTrimDecorations call:[ImMin,ImParseFormatFindEnd,ImParseFormatFindStart,ImStrncpy]
ImParseFormatSanitizeForPrinting call:[ImParseFormatFindEnd,assert]
ImParseFormatSanitizeForScanning call:[ImParseFormatFindEnd,assert]
ImParseFormatPrecision call:[ImAtoi < int >,ImParseFormatFindStart,return]
TempInputText global:[GImGui] call:[ClearActiveID,GetSize,InputTextEx,assert] noreturn:[ClearActiveID]
InputScalar_DefaultCharsFilter call:[return,strlen]
TempInputScalar call:[DataTypeApplyFromText,DataTypeClamp,DataTypeCompare,DataTypeFormatString,DataTypeGetInfo,ImParseFormatTrimDecorations,ImStrTrimBlanks,ImSwap,InputScalar_DefaultCharsFilter,MarkItemEdited,TempInputText,memcmp,memcpy,sizeof] noreturn:[DataTypeClamp,ImSwap,MarkItemEdited]
InputScalar global:[GImGui] call:[BeginDisabled,BeginGroup,ButtonEx,CalcItemWidth,DataTypeApplyFromText,DataTypeApplyOp,DataTypeFormatString,DataTypeGetInfo,EndDisabled,EndGroup,FindRenderedTextEnd,GetCurrentWindow,GetFrameHeight,ImMax,ImVec2,InputScalar_DefaultCharsFilter,InputText,MarkItemEdited,PopID,PushID,SameLine,SetNextItemWidth,TextEx,sizeof] noreturn:[BeginDisabled,DataTypeApplyFromText,EndDisabled,EndGroup,InputScalar_DefaultCharsFilter,MarkItemEdited,TextEx]
InputScalarN global:[GDataTypeInfo,GImGui] call:[BeginGroup,CalcItemWidth,EndGroup,FindRenderedTextEnd,GetCurrentWindow,InputScalar,PopID,PopItemWidth,PushID,PushMultiItemsWidths,SameLine,TextEx] noreturn:[SameLine,TextEx]
InputFloat call:[InputScalar] noreturn:[InputScalar]
InputFloat2 call:[InputScalarN] noreturn:[InputScalarN]
InputFloat3 call:[InputScalarN] noreturn:[InputScalarN]
InputFloat4 call:[InputScalarN] noreturn:[InputScalarN]
InputInt call:[InputScalar] noreturn:[InputScalar]
InputInt2 call:[InputScalarN] noreturn:[InputScalarN]
InputInt3 call:[InputScalarN] noreturn:[InputScalarN]
InputInt4 call:[InputScalarN] noreturn:[InputScalarN]
InputDouble call:[InputScalar] noreturn:[InputScalar]
InputText call:[ImVec2,InputTextEx,assert] noreturn:[InputTextEx]
InputTextMultiline call:[InputTextEx] noreturn:[InputTextEx]
InputTextWithHint call:[ImVec2,InputTextEx,assert] noreturn:[InputTextEx]
InputTextCalcTextLenAndLineCount
InputTextCalcTextSizeW global:[GImGui] call:[GetCharAdvance,ImMax,ImVec2] noreturn:[ImVec2]
STB_TEXTEDIT_STRINGLEN
STB_TEXTEDIT_GETCHAR
STB_TEXTEDIT_GETWIDTH global:[GImGui] call:[GetCharAdvance,return] noreturn:[return]
STB_TEXTEDIT_KEYTOTEXT
STB_TEXTEDIT_LAYOUTROW call:[InputTextCalcTextSizeW]
is_separator call:[ImCharIsBlankW]
is_word_boundary_from_right call:[is_separator]
is_word_boundary_from_left call:[is_separator]
STB_TEXTEDIT_MOVEWORDLEFT_IMPL call:[is_word_boundary_from_right]
STB_TEXTEDIT_MOVEWORDRIGHT_MAC call:[is_word_boundary_from_left]
STB_TEXTEDIT_MOVEWORDRIGHT_WIN call:[is_word_boundary_from_right]
STB_TEXTEDIT_DELETECHARS call:[ImTextCountUtf8BytesFromStr]
STB_TEXTEDIT_INSERTCHARS call:[ImClamp,ImMax,ImTextCountUtf8BytesFromStr,assert,memcpy,memmove,resize,sizeof] noreturn:[memmove,resize]
stb_text_locate_coord call:[STB_TEXTEDIT_GETCHAR,STB_TEXTEDIT_GETWIDTH,STB_TEXTEDIT_LAYOUTROW,STB_TEXTEDIT_STRINGLEN]
stb_textedit_click call:[STB_TEXTEDIT_LAYOUTROW,stb_text_locate_coord]
stb_textedit_drag call:[STB_TEXTEDIT_LAYOUTROW,stb_text_locate_coord]
stb_textedit_find_charpos call:[STB_TEXTEDIT_GETWIDTH,STB_TEXTEDIT_LAYOUTROW,STB_TEXTEDIT_STRINGLEN] noreturn:[STB_TEXTEDIT_GETWIDTH]
stb_textedit_clamp call:[STB_TEXTEDIT_STRINGLEN]
stb_textedit_delete call:[STB_TEXTEDIT_DELETECHARS,stb_text_makeundo_delete]
stb_textedit_delete_selection call:[stb_textedit_clamp,stb_textedit_delete]
stb_textedit_sortselection
stb_textedit_move_to_first call:[stb_textedit_sortselection]
stb_textedit_move_to_last call:[stb_textedit_clamp,stb_textedit_sortselection]
stb_textedit_prep_selection_at_cursor
stb_textedit_cut call:[stb_textedit_delete_selection]
stb_textedit_paste_internal call:[STB_TEXTEDIT_INSERTCHARS,stb_text_makeundo_insert,stb_textedit_clamp,stb_textedit_delete_selection]
stb_textedit_key call:[STB_TEXTEDIT_DELETECHARS,STB_TEXTEDIT_GETCHAR,STB_TEXTEDIT_GETWIDTH,STB_TEXTEDIT_INSERTCHARS,STB_TEXTEDIT_KEYTOTEXT,STB_TEXTEDIT_LAYOUTROW,STB_TEXTEDIT_MOVEWORDLEFT_IMPL,STB_TEXTEDIT_MOVEWORDRIGHT_WIN,STB_TEXTEDIT_STRINGLEN,stb_text_makeundo_insert,stb_text_makeundo_replace,stb_text_redo,stb_text_undo,stb_textedit_clamp,stb_textedit_delete,stb_textedit_delete_selection,stb_textedit_find_charpos,stb_textedit_move_to_first,stb_textedit_move_to_last,stb_textedit_prep_selection_at_cursor] noreturn:[stb_textedit_clamp,stb_textedit_delete,stb_textedit_delete_selection,stb_textedit_move_to_first,stb_textedit_move_to_last,stb_textedit_prep_selection_at_cursor]
stb_textedit_flush_redo
stb_textedit_discard_undo call:[memmove,sizeof] noreturn:[memmove]
stb_textedit_discard_redo call:[assert,memmove,sizeof]
stb_text_create_undo_record call:[stb_textedit_discard_undo,stb_textedit_flush_redo] noreturn:[stb_textedit_discard_undo]
stb_text_createundo call:[stb_text_create_undo_record]
stb_text_undo call:[STB_TEXTEDIT_DELETECHARS,STB_TEXTEDIT_GETCHAR,STB_TEXTEDIT_INSERTCHARS,stb_textedit_discard_redo] noreturn:[STB_TEXTEDIT_DELETECHARS,STB_TEXTEDIT_GETCHAR,stb_textedit_discard_redo]
stb_text_redo call:[STB_TEXTEDIT_DELETECHARS,STB_TEXTEDIT_GETCHAR,STB_TEXTEDIT_INSERTCHARS] noreturn:[STB_TEXTEDIT_DELETECHARS,STB_TEXTEDIT_GETCHAR]
stb_text_makeundo_insert call:[stb_text_createundo] noreturn:[stb_text_createundo]
stb_text_makeundo_delete call:[STB_TEXTEDIT_GETCHAR,stb_text_createundo] noreturn:[STB_TEXTEDIT_GETCHAR]
stb_text_makeundo_replace call:[STB_TEXTEDIT_GETCHAR,stb_text_createundo] noreturn:[STB_TEXTEDIT_GETCHAR]
stb_textedit_clear_state
stb_textedit_initialize_state call:[stb_textedit_clear_state] noreturn:[stb_textedit_clear_state]
stb_textedit_paste call:[stb_textedit_paste_internal] noreturn:[stb_textedit_paste_internal]
stb_textedit_replace call:[STB_TEXTEDIT_DELETECHARS,STB_TEXTEDIT_INSERTCHARS,assert,stb_text_makeundo_replace] noreturn:[assert]
OnKeyPressed call:[CursorAnimReset,stb_textedit_key] noreturn:[CursorAnimReset]
ImGuiInputTextCallbackData call:[memset,sizeof] noreturn:[memset]
DeleteChars call:[assert]
InsertChars global:[GImGui] call:[ImClamp,ImMax,assert,memcpy,memmove,reserve,sizeof,strlen] noreturn:[memmove]
InputTextFilterCharacter global:[GImGui] call:[ImCharIsBlankW,assert,callback,memset,sizeof]
InputTextEx global:[GImGui] call:[AddLine,AddRectFilled,AddText,BeginChildEx,BeginGroup,CalcItemSize,CalcItemWidth,CalcTextSize,ClearActiveID,ClearSelection,ClipWith,CursorAnimReset,CursorClamp,Dummy,EndChild,EndGroup,FindGlyph,FocusWindow,GetBL,GetCharAdvance,GetClipboardText,GetColorU32,GetCurrentWindow,GetID,GetInputTextState,GetScrollMaxY,GetSize,GetWindowScrollbarID,HasSelection,ImClamp,ImFloor,ImMax,ImMin,ImStrbolW,ImStrncpy,ImSwap,ImTextCharFromUtf8,ImTextCountCharsFromUtf8,ImTextCountUtf8BytesFromStr,ImTextStrFromUtf8,ImTextStrToUtf8,ImVec2,InputTextCalcTextLenAndLineCount,InputTextCalcTextSizeW,InputTextFilterCharacter,IsKeyPressed,IsNavInputTest,ItemAdd,ItemHoverable,ItemSize,LogRenderedText,LogSetNextTextDecoration,MarkItemEdited,MemAlloc,MemFree,OnKeyPressed,Overlaps,PopFont,PopStyleColor,PopStyleVar,PushFont,PushStyleColor,PushStyleVar,RenderFrame,RenderNavHighlight,RenderText,STB_TEXTEDIT_GETCHAR,STB_TEXTEDIT_MOVEWORDRIGHT_MAC,SelectAll,SetActiveID,SetActiveIdUsingKey,SetClipboardText,SetFocusID,SetScrollY,assert,callback,clip_rect,cursor_screen_rect,empty,fmodf,frame_bb,memcpy,memset,rect,resize,sizeof,stb_textedit_clamp,stb_textedit_click,stb_textedit_cut,stb_textedit_drag,stb_textedit_initialize_state,stb_textedit_paste,stb_textedit_prep_selection_at_cursor,stb_textedit_replace,strcmp,strlen,text_size,total_bb] noreturn:[AddLine,AddRectFilled,AddText,BeginGroup,ClearActiveID,ClearSelection,CursorAnimReset,CursorClamp,HasSelection,ImMax,ImTextCountCharsFromUtf8,ImTextStrFromUtf8,ImTextStrToUtf8,ImVec2,LogRenderedText,MarkItemEdited,MemFree,OnKeyPressed,PopFont,PushFont,RenderFrame,RenderText,SelectAll,SetActiveIdUsingKey,SetScrollY,assert,resize,stb_textedit_clamp,stb_textedit_cut,stb_textedit_initialize_state,stb_textedit_prep_selection_at_cursor,stb_textedit_replace,strlen]
ColorEdit3 call:[ColorEdit4] noreturn:[ColorEdit4]
ColorEditRestoreHS global:[GImGui] call:[ColorConvertFloat4ToU32,ImVec4]
ColorEdit4 global:[GImGui] call:[AcceptDragDropPayload,BeginDragDropTarget,BeginGroup,BeginPopup,CalcItemWidth,CalcTextSize,ClearFlags,ColorButton,ColorConvertFloat4ToU32,ColorConvertHSVtoRGB,ColorConvertRGBtoHSV,ColorEditOptionsPopup,ColorEditRestoreHS,ColorPicker4,DragFloat,DragInt,EndDragDropTarget,EndGroup,EndPopup,FindRenderedTextEnd,GetBL,GetCurrentWindow,GetFrameHeight,ImCharIsBlankA,ImClamp,ImFormatString,ImIsPowerOfTwo,ImMax,ImVec2,ImVec4,InputText,MarkItemEdited,OpenPopup,OpenPopupOnItemClick,PopID,PushID,SameLine,SetNextItemWidth,SetNextWindowPos,Spacing,TextEx,assert,col_v4,memcpy,sizeof,sscanf] noreturn:[ColorConvertFloat4ToU32,ColorConvertHSVtoRGB,ColorConvertRGBtoHSV,ColorEditOptionsPopup,ColorEditRestoreHS,DragInt,EndDragDropTarget,EndPopup,ImFormatString,MarkItemEdited,OpenPopupOnItemClick,SameLine,SetNextWindowPos,Spacing,TextEx,sscanf]
ColorPicker3 call:[ColorPicker4]
RenderArrowsForVerticalBar call:[ImSaturate,ImVec2,RenderArrowPointingAt] noreturn:[RenderArrowPointingAt]
ColorPicker4 global:[GImGui] call:[AddCircle,AddCircleFilled,AddRectFilledMultiColor,AddTriangle,BeginGroup,CalcItemWidth,ClearFlags,ColorButton,ColorConvertFloat4ToU32,ColorConvertHSVtoRGB,ColorConvertRGBtoHSV,ColorEdit4,ColorEditRestoreHS,ColorPickerOptionsPopup,EndGroup,FindRenderedTextEnd,GetCurrentWindow,GetFontTexUvWhitePixel,GetFrameHeight,GetWidth,ImClamp,ImIsPowerOfTwo,ImLengthSqr,ImLerp,ImMax,ImRotate,ImSaturate,ImTriangleBarycentricCoords,ImTriangleClosestPoint,ImTriangleContainsPoint,ImVec2,ImVec4,InvisibleButton,IsItemActive,MarkItemEdited,OpenPopupOnItemClick,PathArcTo,PathStroke,PopID,PopItemFlag,PopItemWidth,PrimReserve,PrimVtx,PushID,PushItemFlag,PushItemWidth,RenderArrowsForVerticalBar,RenderColorRectWithAlphaCheckerboard,RenderFrameBorder,SameLine,SetCursorScreenPos,ShadeVertsLinearColorGradientKeepAlpha,Text,TextEx,assert,atan2f,bar1_bb,col_v4,cosf,gradient_p0,gradient_p1,hue_color_f,hue_cursor_pos,memcmp,memcpy,ref_col_v4,sinf,sizeof,wheel_center] noreturn:[AddRectFilledMultiColor,BeginGroup,ColorConvertFloat4ToU32,ColorConvertHSVtoRGB,ColorEdit4,ColorEditRestoreHS,ColorPickerOptionsPopup,EndGroup,ImLerp,ImTriangleClosestPoint,MarkItemEdited,OpenPopupOnItemClick,PopItemWidth,RenderArrowsForVerticalBar,SameLine,ShadeVertsLinearColorGradientKeepAlpha,Text,TextEx]
SetColorEditOptions global:[GImGui] call:[ImIsPowerOfTwo,assert]
ColorTooltip global:[GImGui] call:[BeginTooltipEx,ColorButton,EndTooltip,FindRenderedTextEnd,ImSaturate,SameLine,Separator,Text,TextEx,cf,sz] noreturn:[EndTooltip,Separator,Text]
ColorEditOptionsPopup global:[GImGui] call:[BeginPopup,Button,EndPopup,ImFormatString,ImSaturate,ImVec2,OpenPopup,RadioButton,Selectable,Separator,SetClipboardText,sizeof] noreturn:[EndPopup,OpenPopup,Separator,SetClipboardText]
ColorPickerOptionsPopup global:[GImGui] call:[BeginPopup,CheckboxFlags,ColorPicker4,EndPopup,GetCursorScreenPos,GetFrameHeight,ImMax,PopID,PopItemWidth,PushID,PushItemWidth,Selectable,Separator,SetCursorScreenPos,memcpy,picker_size,sizeof] noreturn:[CheckboxFlags,EndPopup,PopID,PopItemWidth,Separator]
TreeNode call:[TreeNodeExV,va_end,va_start]
TreeNode call:[TreeNodeExV,va_end,va_start]
TreeNode call:[GetCurrentWindow,GetID,TreeNodeBehavior] noreturn:[TreeNodeBehavior]
TreeNodeV call:[TreeNodeExV] noreturn:[TreeNodeExV]
TreeNodeV call:[TreeNodeExV] noreturn:[TreeNodeExV]
TreeNodeEx call:[GetCurrentWindow,GetID,TreeNodeBehavior] noreturn:[TreeNodeBehavior]
TreeNodeEx call:[TreeNodeExV,va_end,va_start]
TreeNodeEx call:[TreeNodeExV,va_end,va_start]
TreeNodeExV global:[GImGui] call:[GetCurrentWindow,GetID,ImFormatStringV,TreeNodeBehavior,sizeof] noreturn:[TreeNodeBehavior]
TreeNodeExV global:[GImGui] call:[GetCurrentWindow,GetID,ImFormatStringV,TreeNodeBehavior,sizeof] noreturn:[TreeNodeBehavior]
TreeNodeBehaviorIsOpen global:[GImGui] call:[GetInt,SetInt] noreturn:[SetInt]
TreeNodeBehavior global:[GImGui] call:[ButtonBehavior,CalcTextSize,FindRenderedTextEnd,GetColorU32,GetCurrentWindow,ImMax,ImMin,ImVec2,ItemAdd,ItemSize,LogSetNextTextDecoration,NavMoveRequestCancel,RenderArrow,RenderBullet,RenderFrame,RenderNavHighlight,RenderText,RenderTextClipped,SetInt,SetItemAllowOverlap,TreeNodeBehaviorIsOpen,TreePushOverrideID,assert,text_pos] noreturn:[FindRenderedTextEnd,LogSetNextTextDecoration,NavMoveRequestCancel,RenderArrow,RenderBullet,RenderFrame,RenderText,RenderTextClipped,SetItemAllowOverlap,TreePushOverrideID]
TreePush call:[GetCurrentWindow,Indent,PushID] noreturn:[PushID]
TreePush call:[GetCurrentWindow,Indent,PushID] noreturn:[PushID]
TreePushOverrideID global:[GImGui] call:[Indent,PushOverrideID] noreturn:[PushOverrideID]
TreePop global:[GImGui] call:[ImRect,NavMoveRequestButNoResultYet,NavMoveRequestCancel,PopID,SetNavID,Unindent,assert,back] noreturn:[NavMoveRequestCancel,PopID]
GetTreeNodeToLabelSpacing global:[GImGui]
SetNextItemOpen global:[GImGui]
CollapsingHeader call:[GetCurrentWindow,GetID,TreeNodeBehavior] noreturn:[TreeNodeBehavior]
CollapsingHeader global:[GImGui] call:[CloseButton,GetCurrentWindow,GetID,GetIDWithSeed,ImMax,ImVec2,TreeNodeBehavior]
ListBoxHeader global:[GImGui] call:[BeginListBox,GetTextLineHeightWithSpacing,ImMin] noreturn:[BeginListBox]
EndListBox global:[GImGui] call:[EndChildFrame,EndGroup,assert] noreturn:[EndGroup]
ListBox call:[ListBox]
ListBox global:[GImGui] call:[Begin,BeginListBox,EndListBox,GetTextLineHeightWithSpacing,ImFloor,ImMin,MarkItemEdited,PopID,PushID,Selectable,SetItemDefaultFocus,Step,items_getter,size] noreturn:[ImMin,MarkItemEdited,PopID,SetItemDefaultFocus]
PlotEx global:[GImGui] call:[AddLine,AddRectFilled,CalcItemWidth,CalcTextSize,Contains,GetColorU32,GetCurrentWindow,GetID,ImClamp,ImLerp,ImMax,ImMin,ImSaturate,ImVec2,ItemAdd,ItemHoverable,ItemSize,RenderFrame,RenderText,RenderTextClipped,SetTooltip,assert,frame_bb,inner_bb,total_bb,values_getter] noreturn:[AddLine,AddRectFilled,CalcItemWidth,ImMax,RenderText,RenderTextClipped,SetTooltip]
ImGuiPlotArrayGetterData
Plot_ArrayGetter
PlotLines call:[PlotEx,data] noreturn:[PlotEx]
PlotLines call:[PlotEx] noreturn:[PlotEx]
PlotHistogram call:[PlotEx,data] noreturn:[PlotEx]
PlotHistogram call:[PlotEx] noreturn:[PlotEx]
Value call:[Text] noreturn:[Text]
Value call:[Text] noreturn:[Text]
Value call:[Text] noreturn:[Text]
Value call:[ImFormatString,Text,sizeof] noreturn:[Text]
Update call:[CalcNextTotalWidth,memset,sizeof] noreturn:[memset]
CalcNextTotalWidth call:[sizeof]
DeclColumns call:[CalcNextTotalWidth,ImMax,return] noreturn:[ImMax]
BeginMenuBar call:[AlignTextToFramePadding,BeginGroup,ClipWith,GetCurrentWindow,ImMax,ImVec2,MenuBarRect,PushClipRect,PushID,assert,clip_rect]
EndMenuBar global:[GImGui] call:[EndGroup,FocusWindow,GetCurrentWindow,NavMoveRequestButNoResultYet,NavMoveRequestForward,PopClipRect,PopID,SetNavID,assert,back] noreturn:[NavMoveRequestForward]
BeginViewportSideBar call:[Begin,FindWindowByName,GetBuildWorkRect,GetMainViewport,GetSize,ImVec2,PopStyleVar,PushStyleVar,SetNextWindowPos,SetNextWindowSize,assert]
BeginMainMenuBar global:[GImGui] call:[BeginMenuBar,BeginViewportSideBar,End,GetFrameHeight,GetMainViewport,ImMax,ImVec2] noreturn:[BeginMenuBar,End]
EndMainMenuBar global:[GImGui] call:[End,EndMenuBar,FocusTopMostWindowUnderOne] noreturn:[End,FocusTopMostWindowUnderOne]
IsRootOfOpenMenuSet global:[GImGui] call:[return] noreturn:[return]
BeginMenuEx global:[GImGui] call:[BeginDisabled,BeginPopupEx,CalcTextSize,ClearFlags,ClosePopupToLevel,DeclColumns,EndDisabled,GetBL,GetBR,GetColorU32,GetContentRegionAvail,GetCurrentWindow,GetID,GetTL,GetTR,ImClamp,ImMax,ImMin,ImTriangleContainsPoint,ImVec2,IsPopupOpen,IsRootOfOpenMenuSet,MenuBarHeight,NavMoveRequestCancel,OpenPopup,PopID,PopStyleVar,PushID,PushStyleVar,Rect,RenderArrow,RenderText,Selectable,SetNextWindowPos,contains,fabsf,push_back,text_pos] noreturn:[BeginDisabled,BeginPopupEx,ClearFlags,ClosePopupToLevel,EndDisabled,ImTriangleContainsPoint,NavMoveRequestCancel,OpenPopup,PopStyleVar,RenderArrow,RenderText]
BeginMenu call:[BeginMenuEx] noreturn:[BeginMenuEx]
EndMenu global:[GImGui] call:[ClosePopupToLevel,EndPopup,NavMoveRequestButNoResultYet,NavMoveRequestCancel] noreturn:[EndPopup,NavMoveRequestCancel]
MenuItemEx global:[GImGui] call:[BeginDisabled,CalcTextSize,DeclColumns,EndDisabled,GetColorU32,GetContentRegionAvail,GetCurrentWindow,ImMax,ImVec2,IsRootOfOpenMenuSet,PopID,PopStyleColor,PopStyleVar,PushID,PushStyleColor,PushStyleVar,RenderCheckMark,RenderText,Selectable,text_pos] noreturn:[BeginDisabled,EndDisabled,PopStyleColor,RenderCheckMark,RenderText]
MenuItem call:[MenuItemEx] noreturn:[MenuItemEx]
MenuItem call:[MenuItemEx]
ImGuiTabBarSection call:[memset,sizeof] noreturn:[memset]
ImGuiTabBar call:[memset,sizeof]
TabItemGetSectionIdx call:[return]
TabItemComparerBySection call:[TabItemGetSectionIdx,return]
TabItemComparerByBeginOrder call:[return]
GetTabBarFromTabBarRef global:[GImGui] call:[GetByIndex] noreturn:[GetByIndex]
GetTabBarRefFromTabBar global:[GImGui] call:[Contains,GetIndex,ImGuiPtrOrIndex] noreturn:[ImGuiPtrOrIndex]
BeginTabBar global:[GImGui] call:[BeginTabBarEx,GetID,GetOrAddByKey,ImRect] noreturn:[BeginTabBarEx]
BeginTabBarEx global:[GImGui] call:[AddLine,GetColorU32,GetTabBarRefFromTabBar,ImQsort,ImVec2,PushOverrideID,push_back,sizeof] noreturn:[AddLine,ImQsort,PushOverrideID]
EndTabBar global:[GImGui] call:[GetTabBarFromTabBarRef,ImMax,PopID,TabBarLayout,assert,back,empty,pop_back] noreturn:[GetTabBarFromTabBarRef,PopID,TabBarLayout]
TabBarLayout global:[GImGui] call:[GetHeight,GetTabName,GetWidth,ImLinearSweep,ImMax,ImMin,ImQsort,ImVec2,ItemSize,ShrinkWidths,TabBarProcessReorder,TabBarScrollClamp,TabBarScrollToTab,TabBarScrollingButtons,TabBarTabListPopupButton,TabItemCalcSize,TabItemGetSectionIdx,assert,fabsf,resize,sizeof] noreturn:[GetWidth,ImLinearSweep,ImMax,ImMin,ImQsort,TabBarScrollToTab,resize]
TabBarCalcTabID global:[GImGui] call:[GetID,ImHashStr,KeepAliveID] noreturn:[GetID]
TabBarCalcMaxTabWidth global:[GImGui]
TabBarFindTabByID
TabBarRemoveTab call:[TabBarFindTabByID,erase] noreturn:[erase]
TabBarCloseTab call:[assert]
TabBarScrollClamp call:[GetWidth,ImMax,ImMin] noreturn:[ImMax]
TabBarScrollToTab global:[GImGui] call:[GetTabOrder,GetWidth,ImMax,TabBarFindTabByID]
TabBarQueueReorder call:[assert]
TabBarQueueReorderFromMousePos global:[GImGui] call:[TabBarQueueReorder,assert,index_from_ptr] noreturn:[TabBarQueueReorder]
TabBarProcessReorder call:[GetTabOrder,MarkIniSettingsDirty,TabBarFindTabByID,memmove,sizeof] noreturn:[MarkIniSettingsDirty]
TabBarScrollingButtons global:[GImGui] call:[ArrowButtonEx,GetTabOrder,ImMax,ImVec2,ImVec4,PopStyleColor,PushStyleColor,TabBarFindTabByID,arrow_button_size]
TabBarTabListPopupButton global:[GImGui] call:[BeginCombo,EndCombo,GetTabName,ImVec2,ImVec4,PopStyleColor,PushStyleColor,Selectable] noreturn:[EndCombo]
BeginTabItem global:[GImGui] call:[PushOverrideID,TabItemEx,assert] noreturn:[PushOverrideID]
EndTabItem global:[GImGui] call:[PopID,assert] noreturn:[PopID]
TabItemButton global:[GImGui] call:[TabItemEx,assert] noreturn:[TabItemEx]
TabItemEx global:[GImGui] call:[ButtonBehavior,FindRenderedTextEnd,GetColorU32,GetIDWithSeed,GetSize,ImGuiTabItem,ImMax,ImRect,ImVec2,IsItemHovered,IsMouseClicked,IsMouseDragging,IsMouseReleased,ItemAdd,ItemSize,PopClipRect,PushClipRect,RenderNavHighlight,SetItemAllowOverlap,SetTooltip,TabBarCalcTabID,TabBarCloseTab,TabBarFindTabByID,TabBarLayout,TabBarQueueReorderFromMousePos,TabItemBackground,TabItemCalcSize,TabItemLabelAndCloseButton,append,assert,back,bb,index_from_ptr,push_back,size,strlen] noreturn:[ImVec2,PopClipRect,PushClipRect,SetItemAllowOverlap,SetTooltip,TabBarCloseTab,TabBarLayout,TabBarQueueReorderFromMousePos]
SetTabItemClosed global:[GImGui] call:[TabBarCalcTabID,TabBarFindTabByID]
TabItemCalcSize global:[GImGui] call:[CalcTextSize,ImMin,ImVec2,TabBarCalcMaxTabWidth] noreturn:[ImVec2]
TabItemBackground global:[GImGui] call:[GetColorU32,GetWidth,ImMax,ImMin,ImVec2,PathArcToFast,PathFillConvex,PathLineTo,PathStroke,assert] noreturn:[PathStroke]
TabItemLabelAndCloseButton global:[GImGui] call:[CalcTextSize,CloseButton,GetCenter,GetColorU32,GetWidth,ImMax,ImVec2,IsMouseClicked,PopStyleVar,PushStyleVar,RenderBullet,RenderTextEllipsis,bullet_bb,button_pos,text_pixel_clip_bb] noreturn:[RenderBullet]
ImAtoi < int >
DataTypeClampT < signed char >
DataTypeClampT < unsigned char >
DataTypeClampT < signed short >
DataTypeClampT < unsigned short >
DataTypeClampT < signed int >
DataTypeClampT < unsigned int >
DataTypeClampT < signed long long >
DataTypeClampT < unsigned long long >
DataTypeClampT < float >
DataTypeClampT < double >
DataTypeCompareT < signed char >
DataTypeCompareT < unsigned char >
DataTypeCompareT < signed short >
DataTypeCompareT < unsigned short >
DataTypeCompareT < signed int >
DataTypeCompareT < unsigned int >
DataTypeCompareT < signed long long >
DataTypeCompareT < unsigned long long >
DataTypeCompareT < float >
DataTypeCompareT < double >
clear call:[clear] noreturn:[clear]
empty
size
alloc_chunk call:[resize,return]
begin call:[return]
next_chunk call:[assert,begin,chunk_size,end,return]
chunk_size call:[return]
end call:[return]
offset_from_ptr call:[assert,begin,end,return]
ptr_from_offset call:[assert,return]
swap call:[swap] noreturn:[swap]
clear call:[clear] noreturn:[clear]
empty
size
alloc_chunk call:[resize,return]
begin call:[return]
next_chunk call:[assert,begin,chunk_size,end,return]
chunk_size call:[return]
end call:[return]
offset_from_ptr call:[assert,begin,end,return]
ptr_from_offset call:[assert,return]
swap call:[swap] noreturn:[swap]
ImPool < ImGuiTable >
ImPool < ImGuiTable > call:[Clear] noreturn:[Clear]
GetByKey call:[GetInt,return]
GetByIndex
GetIndex call:[assert,return]
GetOrAddByKey call:[Add,GetIntRef] noreturn:[Add]
Contains call:[return] noreturn:[return]
Clear call:[Clear,ImGuiTable,clear] noreturn:[ImGuiTable]
Add call:[ImGuiTable,ImNewWrapper,new,resize]
Remove call:[GetIndex,Remove] noreturn:[Remove]
Remove call:[ImGuiTable,SetInt]
Reserve call:[reserve] noreturn:[reserve]
GetAliveCount
GetBufSize
GetMapSize
TryGetMapData call:[GetByIndex] noreturn:[GetByIndex]
GetSize call:[GetMapSize] noreturn:[GetMapSize]
ImPool < ImGuiTabBar >
ImPool < ImGuiTabBar > call:[Clear] noreturn:[Clear]
GetByKey call:[GetInt,return]
GetByIndex
GetIndex call:[assert,return]
GetOrAddByKey call:[Add,GetIntRef] noreturn:[Add]
Contains call:[return] noreturn:[return]
Clear call:[Clear,ImGuiTabBar,clear] noreturn:[ImGuiTabBar]
Add call:[ImGuiTabBar,ImNewWrapper,new,resize]
Remove call:[GetIndex,Remove] noreturn:[Remove]
Remove call:[ImGuiTabBar,SetInt]
Reserve call:[reserve] noreturn:[reserve]
GetAliveCount
GetBufSize
GetMapSize
TryGetMapData call:[GetByIndex] noreturn:[GetByIndex]
GetSize call:[GetMapSize] noreturn:[GetMapSize]
ImSpan < ImGuiTableColumn >
ImSpan < ImGuiTableColumn >
ImSpan < ImGuiTableColumn >
set
set
size call:[return]
size_in_bytes call:[return,sizeof] noreturn:[sizeof]
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
index_from_ptr call:[assert,return]
ImSpan < signed char >
ImSpan < signed char >
ImSpan < signed char >
set
set
size call:[return]
size_in_bytes call:[return,sizeof] noreturn:[sizeof]
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
index_from_ptr call:[assert,return]
ImSpan < ImGuiTableCellData >
ImSpan < ImGuiTableCellData >
ImSpan < ImGuiTableCellData >
set
set
size call:[return]
size_in_bytes call:[return,sizeof] noreturn:[sizeof]
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
index_from_ptr call:[assert,return]
ImBitArray < ImGuiKey_NamedKey_COUNT , - ImGuiKey_NamedKey_BEGIN > call:[ClearAllBits] noreturn:[ClearAllBits]
ClearAllBits call:[memset,sizeof] noreturn:[memset]
SetAllBits call:[memset,sizeof] noreturn:[memset]
TestBit call:[ImBitArrayTestBit,assert] noreturn:[ImBitArrayTestBit]
SetBit call:[ImBitArraySetBit,assert] noreturn:[ImBitArraySetBit]
ClearBit call:[ImBitArrayClearBit,assert] noreturn:[ImBitArrayClearBit]
SetBitRange call:[ImBitArraySetBitRange,assert] noreturn:[ImBitArraySetBitRange]
operator[] call:[ImBitArrayTestBit,assert] noreturn:[ImBitArrayTestBit]
ImVector < unsigned short >
ImVector < unsigned short > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < unsigned short > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear,short] noreturn:[clear,short]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTextRange >
ImVector < ImGuiTextRange > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiTextRange > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTextRange,clear] noreturn:[ImGuiTextRange,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < char >
ImVector < char > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < char > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[char,clear] noreturn:[char,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiStoragePair >
ImVector < ImGuiStoragePair > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiStoragePair > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiStoragePair,clear] noreturn:[ImGuiStoragePair,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImDrawCmd >
ImVector < ImDrawCmd > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImDrawCmd > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImDrawCmd,clear] noreturn:[ImDrawCmd,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImDrawChannel >
ImVector < ImDrawChannel > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImDrawChannel > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImDrawChannel,clear] noreturn:[ImDrawChannel,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImDrawVert >
ImVector < ImDrawVert > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImDrawVert > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImDrawVert,clear] noreturn:[ImDrawVert,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImVec4 >
ImVector < ImVec4 > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImVec4 > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImVec4,clear] noreturn:[ImVec4,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < void * >
ImVector < void * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < void * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImVec2 >
ImVector < ImVec2 > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImVec2 > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImVec2,clear] noreturn:[ImVec2,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < unsigned int >
ImVector < unsigned int > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < unsigned int > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear,int] noreturn:[clear,int]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImFont * >
ImVector < ImFont * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImFont * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImFontAtlasCustomRect >
ImVector < ImFontAtlasCustomRect > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImFontAtlasCustomRect > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImFontAtlasCustomRect,clear] noreturn:[ImFontAtlasCustomRect,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImFontConfig >
ImVector < ImFontConfig > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImFontConfig > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImFontConfig,clear] noreturn:[ImFontConfig,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < float >
ImVector < float > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < float > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear,float] noreturn:[clear,float]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImFontGlyph >
ImVector < ImFontGlyph > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImFontGlyph > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImFontGlyph,clear] noreturn:[ImFontGlyph,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImDrawList * >
ImVector < ImDrawList * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImDrawList * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiListClipperRange >
ImVector < ImGuiListClipperRange > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiListClipperRange > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiListClipperRange,clear] noreturn:[ImGuiListClipperRange,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiOldColumnData >
ImVector < ImGuiOldColumnData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiOldColumnData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiOldColumnData,clear] noreturn:[ImGuiOldColumnData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiStackLevelInfo >
ImVector < ImGuiStackLevelInfo > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiStackLevelInfo > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiStackLevelInfo,clear] noreturn:[ImGuiStackLevelInfo,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiInputEvent >
ImVector < ImGuiInputEvent > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiInputEvent > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiInputEvent,clear] noreturn:[ImGuiInputEvent,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiWindow * >
ImVector < ImGuiWindow * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiWindow * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiWindowStackData >
ImVector < ImGuiWindowStackData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiWindowStackData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiWindowStackData,clear] noreturn:[ImGuiWindowStackData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiColorMod >
ImVector < ImGuiColorMod > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiColorMod > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiColorMod,clear] noreturn:[ImGuiColorMod,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiStyleMod >
ImVector < ImGuiStyleMod > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiStyleMod > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiStyleMod,clear] noreturn:[ImGuiStyleMod,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < int >
ImVector < int > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < int > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear,int] noreturn:[clear,int]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiGroupData >
ImVector < ImGuiGroupData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiGroupData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiGroupData,clear] noreturn:[ImGuiGroupData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiPopupData >
ImVector < ImGuiPopupData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiPopupData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiPopupData,clear] noreturn:[ImGuiPopupData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiViewportP * >
ImVector < ImGuiViewportP * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiViewportP * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < unsigned char >
ImVector < unsigned char > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < unsigned char > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[char,clear] noreturn:[char,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiListClipperData >
ImVector < ImGuiListClipperData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiListClipperData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiListClipperData,clear] noreturn:[ImGuiListClipperData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTableTempData >
ImVector < ImGuiTableTempData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiTableTempData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTableTempData,clear] noreturn:[ImGuiTableTempData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiPtrOrIndex >
ImVector < ImGuiPtrOrIndex > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiPtrOrIndex > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiPtrOrIndex,clear] noreturn:[ImGuiPtrOrIndex,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiShrinkWidthItem >
ImVector < ImGuiShrinkWidthItem > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiShrinkWidthItem > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiShrinkWidthItem,clear] noreturn:[ImGuiShrinkWidthItem,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiSettingsHandler >
ImVector < ImGuiSettingsHandler > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiSettingsHandler > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiSettingsHandler,clear] noreturn:[ImGuiSettingsHandler,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiContextHook >
ImVector < ImGuiContextHook > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiContextHook > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiContextHook,clear] noreturn:[ImGuiContextHook,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiOldColumns >
ImVector < ImGuiOldColumns > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiOldColumns > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiOldColumns,clear] noreturn:[ImGuiOldColumns,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTabItem >
ImVector < ImGuiTabItem > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiTabItem > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTabItem,clear] noreturn:[ImGuiTabItem,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTableInstanceData >
ImVector < ImGuiTableInstanceData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiTableInstanceData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTableInstanceData,clear] noreturn:[ImGuiTableInstanceData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTableColumnSortSpecs >
ImVector < ImGuiTableColumnSortSpecs > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiTableColumnSortSpecs > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTableColumnSortSpecs,clear] noreturn:[ImGuiTableColumnSortSpecs,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTable >
ImVector < ImGuiTable > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiTable > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTable,clear] noreturn:[ImGuiTable,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTabBar >
ImVector < ImGuiTabBar > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiTabBar > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTabBar,clear] noreturn:[ImGuiTabBar,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
