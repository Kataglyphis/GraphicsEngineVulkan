countof
identity call:[genType] noreturn:[genType]
identity call:[genType] noreturn:[genType]
length
call
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
operator=
operator+=
operator+=
operator+=
operator-=
operator-=
operator-=
operator*=
operator*=
operator*=
operator/=
operator/=
operator/=
operator++
operator--
operator++ call:[Result]
operator-- call:[Result]
operator%=
operator%=
operator%=
operator&=
operator&=
operator&=
operator|=
operator|=
operator|=
operator^=
operator^=
operator^=
operator<<=
operator<<=
operator<<=
operator>>=
operator>>=
operator>>=
operator+
operator-
operator+
operator+
operator+
operator+
operator+
operator-
operator-
operator-
operator-
operator-
operator*
operator*
operator*
operator*
operator*
operator/
operator/
operator/
operator/
operator/
operator%
operator%
operator%
operator%
operator%
operator&
operator&
operator&
operator&
operator&
operator|
operator|
operator|
operator|
operator|
operator^
operator^
operator^
operator^
operator^
operator<<
operator<<
operator<<
operator<<
operator<<
operator>>
operator>>
operator>>
operator>>
operator>>
operator~
operator== call:[call] noreturn:[call]
operator!=
operator&&
operator||
length
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
operator=
operator+=
operator+=
operator+=
operator-=
operator-=
operator-=
operator*=
operator*=
operator*=
operator/=
operator/=
operator/=
operator++
operator--
operator++ call:[Result]
operator-- call:[Result]
operator%=
operator%=
operator%=
operator&=
operator&=
operator&=
operator|=
operator|=
operator|=
operator^=
operator^=
operator^=
operator<<=
operator<<=
operator<<=
operator>>=
operator>>=
operator>>=
operator+
operator-
operator+
operator+
operator+
operator+
operator+
operator-
operator-
operator-
operator-
operator-
operator*
operator*
operator*
operator*
operator*
operator/
operator/
operator/
operator/
operator/
operator%
operator%
operator%
operator%
operator%
operator&
operator&
operator&
operator&
operator&
operator|
operator|
operator|
operator|
operator|
operator^
operator^
operator^
operator^
operator^
operator<<
operator<<
operator<<
operator<<
operator<<
operator>>
operator>>
operator>>
operator>>
operator>>
operator~
operator== call:[call] noreturn:[call]
operator!=
operator&&
operator||
length
call
call
call
call
call
call
call
call
call
call
call call:[call] noreturn:[call]
call call:[call,sizeof] noreturn:[call]
call
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
vec
operator=
operator+= call:[call,return] noreturn:[return]
operator+= call:[call,return] noreturn:[return]
operator+= call:[call,return] noreturn:[return]
operator-= call:[call,return] noreturn:[return]
operator-= call:[call,return] noreturn:[return]
operator-= call:[call,return] noreturn:[return]
operator*= call:[call,return] noreturn:[return]
operator*= call:[call,return] noreturn:[return]
operator*= call:[call,return] noreturn:[return]
operator/= call:[call,return] noreturn:[return]
operator/= call:[call,return] noreturn:[return]
operator/= call:[call,return] noreturn:[return]
operator++
operator--
operator++ call:[Result]
operator-- call:[Result]
operator%= call:[call,return] noreturn:[return]
operator%= call:[call,return] noreturn:[return]
operator%= call:[call,return] noreturn:[return]
operator&= call:[call,return,sizeof] noreturn:[return]
operator&= call:[call,return,sizeof] noreturn:[return]
operator&= call:[call,return,sizeof] noreturn:[return]
operator|= call:[call,return,sizeof] noreturn:[return]
operator|= call:[call,return,sizeof] noreturn:[return]
operator|= call:[call,return,sizeof] noreturn:[return]
operator^= call:[call,return,sizeof] noreturn:[return]
operator^= call:[call,return,sizeof] noreturn:[return]
operator^= call:[call,return,sizeof] noreturn:[return]
operator<<= call:[call,return,sizeof] noreturn:[return]
operator<<= call:[call,return,sizeof] noreturn:[return]
operator<<= call:[call,return,sizeof] noreturn:[return]
operator>>= call:[call,return,sizeof] noreturn:[return]
operator>>= call:[call,return,sizeof] noreturn:[return]
operator>>= call:[call,return,sizeof] noreturn:[return]
operator+
operator-
operator+
operator+
operator+
operator+
operator+
operator-
operator-
operator-
operator-
operator-
operator*
operator*
operator*
operator*
operator*
operator/
operator/
operator/
operator/
operator/
operator%
operator%
operator%
operator%
operator%
operator&
operator&
operator&
operator&
operator&
operator|
operator|
operator|
operator|
operator|
operator^
operator^
operator^
operator^
operator^
operator<<
operator<<
operator<<
operator<<
operator<<
operator>>
operator>>
operator>>
operator>>
operator>>
operator~ call:[call,sizeof] noreturn:[call]
operator== call:[call,sizeof] noreturn:[call]
operator!= call:[call,sizeof] noreturn:[call]
operator&&
operator||
length
length
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
operator=
operator+=
operator+=
operator-=
operator-=
operator*=
operator/=
operator++
operator--
operator++ call:[Result]
operator-- call:[Result]
operator+
operator-
operator+
operator+
operator-
operator-
operator*
operator*
operator* call:[col_type] noreturn:[col_type]
operator* call:[row_type] noreturn:[row_type]
operator*
operator*
operator*
operator/
operator/
operator== call:[return]
operator!= call:[return]
length
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
operator=
operator+=
operator+=
operator-=
operator-=
operator*=
operator/=
operator++
operator--
operator++ call:[Result]
operator-- call:[Result]
operator+
operator-
operator+
operator+
operator-
operator-
operator*
operator*
operator* call:[col_type] noreturn:[col_type]
operator* call:[row_type] noreturn:[row_type]
operator*
operator*
operator*
operator/
operator/
operator== call:[return]
operator!= call:[return]
length
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
operator=
operator+=
operator+=
operator-=
operator-=
operator*=
operator/=
operator++
operator--
operator++ call:[Result]
operator-- call:[Result]
operator+
operator-
operator+
operator+
operator-
operator-
operator*
operator*
operator* call:[col_type] noreturn:[col_type]
operator* call:[row_type] noreturn:[row_type]
operator*
operator*
operator*
operator/
operator/
operator== call:[return]
operator!= call:[return]
length
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
operator=
operator+=
operator+=
operator-=
operator-=
operator*=
operator*= call:[return] noreturn:[return]
operator/=
operator/= call:[inverse] noreturn:[inverse]
operator++
operator--
operator++ call:[Result]
operator-- call:[Result]
operator+
operator-
operator+
operator+
operator+
operator-
operator-
operator-
operator*
operator*
operator* call:[col_type] noreturn:[col_type]
operator* call:[row_type] noreturn:[row_type]
operator*
operator*
operator*
operator/
operator/
operator/ call:[inverse]
operator/ call:[inverse] noreturn:[inverse]
operator/ call:[m1_copy]
operator== call:[return]
operator!= call:[return]
length
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
operator=
operator+=
operator+=
operator-=
operator-=
operator*=
operator/=
operator++
operator--
operator++ call:[Result]
operator-- call:[Result]
operator+
operator-
operator+
operator+
operator-
operator-
operator*
operator*
operator* call:[col_type] noreturn:[col_type]
operator* call:[row_type] noreturn:[row_type]
operator*
operator*
operator*
operator/
operator/
operator== call:[return]
operator!= call:[return]
length
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
operator=
operator+=
operator+=
operator-=
operator-=
operator*=
operator/=
operator++
operator--
operator++ call:[Result]
operator-- call:[Result]
operator+
operator-
operator+
operator+
operator-
operator-
operator*
operator*
operator* call:[col_type] noreturn:[col_type]
operator* call:[row_type] noreturn:[row_type]
operator*
operator*
operator*
operator/
operator/
operator== call:[return]
operator!= call:[return]
length
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
operator=
operator+=
operator+=
operator-=
operator-=
operator*=
operator/=
operator++
operator--
operator++ call:[Result]
operator-- call:[Result]
operator+
operator-
operator+
operator+
operator-
operator-
operator*
operator*
operator* call:[col_type] noreturn:[col_type]
operator* call:[row_type] noreturn:[row_type]
operator*
operator*
operator*
operator/
operator/
operator== call:[return]
operator!= call:[return]
length
mat
mat
mat
mat
mat call:[static_assert] noreturn:[static_assert]
mat call:[static_assert] noreturn:[static_assert]
mat
mat
mat
mat
mat
mat
mat
mat
operator=
operator+=
operator+=
operator-=
operator-=
operator*=
operator*= call:[return] noreturn:[return]
operator/=
operator/= call:[inverse] noreturn:[inverse]
operator++
operator--
operator++ call:[Result]
operator-- call:[Result]
operator+
operator-
operator+
operator+
operator+
operator-
operator-
operator-
operator*
operator*
operator* call:[Mov0,Mov1,Mov2,Mov3]
operator* call:[row_type] noreturn:[row_type]
operator*
operator*
operator*
operator/
operator/
operator/ call:[inverse]
operator/ call:[inverse] noreturn:[inverse]
operator/ call:[m1_copy]
operator== call:[return]
operator!= call:[return]
length
vec
vec
vec
vec
vec
vec
operator=
operator+=
operator+=
operator-=
operator-=
operator*=
operator*=
operator/=
operator/=
operator++
operator--
operator++ call:[Result]
operator-- call:[Result]
operator%=
operator%=
operator&=
operator&=
operator|=
operator|=
operator^=
operator^=
operator<<=
operator<<=
operator>>=
operator>>=
operator+
operator-
operator+
operator+
operator+
operator-
operator-
operator-
operator*
operator*
operator*
operator/
operator/
operator/
operator%
operator%
operator%
operator&
operator&
operator&
operator|
operator|
operator|
operator^
operator^
operator^
operator<<
operator<<
operator<<
operator>>
operator>>
operator>>
operator~
operator== call:[call] noreturn:[call]
operator!=
operator&&
operator||
lessThan call:[Result]
lessThanEqual call:[Result]
greaterThan call:[Result]
greaterThanEqual call:[Result]
equal call:[Result]
notEqual call:[Result]
any
all
not_ call:[Result]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[Func]
call call:[call,static_assert] noreturn:[call]
call call:[call] noreturn:[call]
call call:[sqrt] noreturn:[sqrt]
call call:[tmp,xhalf]
pow call:[call] noreturn:[call]
exp call:[call] noreturn:[call]
log call:[call] noreturn:[call]
exp2 call:[call] noreturn:[call]
log2 call:[log2]
log2 call:[call] noreturn:[call]
sqrt call:[call,static_assert] noreturn:[call]
inversesqrt call:[sqrt] noreturn:[sqrt]
inversesqrt call:[call,static_assert] noreturn:[call]
call call:[genFIType,static_assert]
call call:[static_assert]
min call:[return,static_assert]
max call:[return,static_assert]
abs call:[return,sizeof]
call call:[call] noreturn:[call]
call call:[static_assert]
call call:[length]
call call:[static_assert]
call
call call:[static_assert]
call
call call:[lessThan]
call call:[call] noreturn:[call]
call call:[call] noreturn:[call]
call call:[floor] noreturn:[floor]
call call:[call] noreturn:[call]
call call:[call] noreturn:[call]
call call:[floor,static_assert] noreturn:[floor]
call call:[call] noreturn:[call]
call call:[call] noreturn:[call]
call call:[max,min] noreturn:[min]
call call:[lessThan,mix] noreturn:[mix]
call call:[clamp,static_assert,tmp]
abs call:[call] noreturn:[call]
abs call:[call] noreturn:[call]
sign call:[call,static_assert]
sign call:[call,static_assert] noreturn:[call]
floor call:[call,static_assert] noreturn:[call]
trunc call:[call,static_assert] noreturn:[call]
round call:[call,static_assert] noreturn:[call]
roundEven call:[fract,round,static_assert] noreturn:[round]
roundEven call:[call,static_assert] noreturn:[call]
ceil call:[call,static_assert] noreturn:[call]
fract call:[fract]
fract call:[call,static_assert] noreturn:[call]
mod call:[mod]
mod call:[call] noreturn:[call]
mod call:[call] noreturn:[call]
modf call:[modf,static_assert] noreturn:[modf]
modf call:[modf]
modf call:[modf]
modf call:[modf]
modf call:[modf]
min call:[call,static_assert] noreturn:[call]
min call:[call] noreturn:[call]
max call:[call,static_assert] noreturn:[call]
max call:[call] noreturn:[call]
clamp call:[max,min,static_assert] noreturn:[min]
clamp call:[call,static_assert] noreturn:[call]
clamp call:[call,static_assert] noreturn:[call]
mix call:[call] noreturn:[call]
mix call:[call] noreturn:[call]
mix call:[call] noreturn:[call]
step call:[mix] noreturn:[mix]
step call:[call] noreturn:[call]
step call:[call] noreturn:[call]
smoothstep call:[clamp,genType,static_assert,tmp]
smoothstep call:[call] noreturn:[call]
smoothstep call:[call] noreturn:[call]
isnan call:[isnan,length,static_assert] noreturn:[isnan]
isinf call:[isinf,length,static_assert] noreturn:[isinf]
floatBitsToInt
floatBitsToInt
floatBitsToUint
floatBitsToUint
intBitsToFloat
intBitsToFloat
uintBitsToFloat
uintBitsToFloat
frexp call:[frexp,static_assert] noreturn:[frexp]
frexp call:[frexp,length,static_assert] noreturn:[frexp]
ldexp call:[ldexp,static_assert] noreturn:[ldexp]
ldexp call:[ldexp,length,static_assert] noreturn:[ldexp]
call call:[dot,sqrt] noreturn:[sqrt]
call call:[length] noreturn:[length]
call
call call:[tmp]
call call:[tmp]
call call:[return,tmp]
call call:[static_assert]
call call:[dot,inversesqrt,static_assert] noreturn:[inversesqrt]
call call:[dot,static_assert]
call call:[dot]
call call:[dot,dotValue,k,sqrt]
length call:[abs,static_assert] noreturn:[abs]
length call:[call,static_assert] noreturn:[call]
distance call:[length,static_assert] noreturn:[length]
distance call:[call] noreturn:[call]
dot call:[static_assert]
dot call:[call,static_assert] noreturn:[call]
cross call:[call] noreturn:[call]
normalize call:[call,static_assert] noreturn:[call]
faceforward call:[dot]
faceforward call:[call] noreturn:[call]
reflect call:[dot,genType] noreturn:[genType]
reflect call:[call] noreturn:[call]
refract call:[dot,dotValue,k,return,sqrt,static_assert]
refract call:[call,static_assert] noreturn:[call]
call call:[length]
call call:[call,static_assert] noreturn:[call]
call call:[length]
call call:[call,static_assert] noreturn:[call]
call
call
call
call
call
call
call
call
call
call call:[call,static_assert] noreturn:[call]
call
call
call call:[DetCof]
call call:[call,static_assert] noreturn:[call]
call call:[Inverse]
call
call call:[Dot0,Fac0,Fac1,Fac2,Fac3,Fac4,Fac5,Inv0,Inv1,Inv2,Inv3,Inverse,Row0,SignA,SignB,Vec0,Vec1,Vec2,Vec3]
matrixCompMult call:[call] noreturn:[call]
outerProduct call:[call] noreturn:[call]
transpose call:[call] noreturn:[call]
determinant call:[call] noreturn:[call]
inverse call:[call,static_assert] noreturn:[call]
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
mat
operator=
operator+=
operator+=
operator-=
operator-=
operator*=
operator*= call:[return] noreturn:[return]
operator/=
operator/= call:[inverse] noreturn:[inverse]
operator++
operator--
operator++ call:[Result]
operator-- call:[Result]
operator+
operator-
operator+
operator+
operator+
operator-
operator-
operator-
operator*
operator*
operator*
operator*
operator*
operator*
operator*
operator/
operator/
operator/ call:[inverse]
operator/ call:[inverse] noreturn:[inverse]
operator/ call:[m1_copy]
operator== call:[return]
operator!= call:[return]
radians call:[static_assert]
radians call:[call] noreturn:[call]
degrees call:[static_assert]
degrees call:[call] noreturn:[call]
sin call:[call] noreturn:[call]
cos call:[call] noreturn:[call]
tan call:[call] noreturn:[call]
asin call:[call] noreturn:[call]
acos call:[call] noreturn:[call]
atan call:[atan2,static_assert] noreturn:[atan2]
atan call:[call] noreturn:[call]
atan call:[call] noreturn:[call]
sinh call:[call] noreturn:[call]
cosh call:[call] noreturn:[call]
tanh call:[call] noreturn:[call]
asinh call:[call] noreturn:[call]
acosh call:[call] noreturn:[call]
atanh call:[call] noreturn:[call]
overflow
uif32
uif32
uif32
toFloat32
toFloat16 call:[overflow,short] noreturn:[short]
packUnorm2x16 call:[clamp,result,round]
unpackUnorm2x16
packSnorm2x16 call:[clamp,result,round]
unpackSnorm2x16 call:[clamp] noreturn:[clamp]
packUnorm4x8 call:[clamp,result,round]
unpackUnorm4x8
packSnorm4x8 call:[clamp,result,round]
unpackSnorm4x8 call:[clamp] noreturn:[clamp]
packDouble2x32
unpackDouble2x32
packHalf2x16 call:[toFloat16]
unpackHalf2x16 call:[toFloat32]
mask call:[sizeof]
call
call call:[return]
call
call call:[return]
call call:[bitCount] noreturn:[bitCount]
call
call
call call:[bitCount,call,sizeof,x] noreturn:[bitCount]
uaddCarry call:[Max32,Value64]
uaddCarry call:[Max32,Value64,greaterThan,mix]
usubBorrow
usubBorrow call:[XgeY,YgeX,greaterThanEqual,mix] noreturn:[mix]
umulExtended
umulExtended call:[Value64]
imulExtended
imulExtended call:[Value64]
bitfieldExtract call:[bitfieldExtract]
bitfieldExtract call:[mask,return,static_assert]
bitfieldInsert call:[bitfieldInsert,static_assert]
bitfieldInsert call:[mask,return,static_assert]
bitfieldReverse call:[bitfieldReverse,static_assert]
bitfieldReverse call:[call,sizeof,static_assert,x]
bitCount call:[bitCount,static_assert]
bitCount call:[call,sizeof,static_assert,type,x]
findLSB call:[call,sizeof,static_assert] noreturn:[call]
findLSB call:[call,static_assert] noreturn:[call]
findMSB call:[findMSB,static_assert]
findMSB call:[call,sizeof,static_assert] noreturn:[call]
get_should_close call:[glfwWindowShouldClose] noreturn:[glfwWindowShouldClose]
get_buffer_width call:[return]
get_buffer_height call:[return]
get_window
get_keys
epsilon call:[epsilon,static_assert] noreturn:[epsilon]
pi call:[static_assert]
cos_one_over_two call:[genType] noreturn:[genType]
zero call:[genType] noreturn:[genType]
one call:[genType] noreturn:[genType]
two_pi call:[genType] noreturn:[genType]
root_pi call:[genType] noreturn:[genType]
half_pi call:[genType] noreturn:[genType]
three_over_two_pi call:[genType] noreturn:[genType]
quarter_pi call:[genType] noreturn:[genType]
one_over_pi call:[genType] noreturn:[genType]
one_over_two_pi call:[genType] noreturn:[genType]
two_over_pi call:[genType] noreturn:[genType]
four_over_pi call:[genType] noreturn:[genType]
two_over_root_pi call:[genType] noreturn:[genType]
one_over_root_two call:[genType] noreturn:[genType]
root_half_pi call:[genType] noreturn:[genType]
root_two_pi call:[genType] noreturn:[genType]
root_ln_four call:[genType] noreturn:[genType]
e call:[genType] noreturn:[genType]
euler call:[genType] noreturn:[genType]
root_two call:[genType] noreturn:[genType]
root_three call:[genType] noreturn:[genType]
root_five call:[genType] noreturn:[genType]
ln_two call:[genType] noreturn:[genType]
ln_ten call:[genType] noreturn:[genType]
ln_ln_two call:[genType] noreturn:[genType]
third call:[genType] noreturn:[genType]
two_thirds call:[genType] noreturn:[genType]
golden_ratio call:[genType] noreturn:[genType]
projectZO call:[T]
projectNO call:[T]
project call:[projectZO] noreturn:[projectZO]
unProjectZO call:[T,inverse]
unProjectNO call:[T,inverse]
unProject call:[unProjectZO] noreturn:[unProjectZO]
pickMatrix call:[Result,Temp,assert,scale,translate] noreturn:[scale]
ortho call:[Result]
orthoLH_ZO call:[Result]
orthoLH_NO call:[Result]
orthoRH_ZO call:[Result]
orthoRH_NO call:[Result]
orthoZO call:[orthoRH_ZO] noreturn:[orthoRH_ZO]
orthoNO call:[orthoRH_NO] noreturn:[orthoRH_NO]
orthoLH call:[orthoLH_ZO] noreturn:[orthoLH_ZO]
orthoRH call:[orthoRH_ZO] noreturn:[orthoRH_ZO]
ortho call:[orthoRH_ZO] noreturn:[orthoRH_ZO]
frustumLH_ZO call:[Result]
frustumLH_NO call:[Result]
frustumRH_ZO call:[Result]
frustumRH_NO call:[Result]
frustumZO call:[frustumRH_ZO] noreturn:[frustumRH_ZO]
frustumNO call:[frustumRH_NO] noreturn:[frustumRH_NO]
frustumLH call:[frustumLH_ZO] noreturn:[frustumLH_ZO]
frustumRH call:[frustumRH_ZO] noreturn:[frustumRH_ZO]
frustum call:[frustumRH_ZO] noreturn:[frustumRH_ZO]
perspectiveRH_ZO call:[Result,abs,assert,epsilon,tan]
perspectiveRH_NO call:[Result,abs,assert,epsilon,tan]
perspectiveLH_ZO call:[Result,abs,assert,epsilon,tan]
perspectiveLH_NO call:[Result,abs,assert,epsilon,tan]
perspectiveZO call:[perspectiveRH_ZO] noreturn:[perspectiveRH_ZO]
perspectiveNO call:[perspectiveRH_NO] noreturn:[perspectiveRH_NO]
perspectiveLH call:[perspectiveLH_ZO] noreturn:[perspectiveLH_ZO]
perspectiveRH call:[perspectiveRH_ZO] noreturn:[perspectiveRH_ZO]
perspective call:[perspectiveRH_ZO] noreturn:[perspectiveRH_ZO]
perspectiveFovRH_ZO call:[Result,assert,cos,sin]
perspectiveFovRH_NO call:[Result,assert,cos,sin]
perspectiveFovLH_ZO call:[Result,assert,cos,sin]
perspectiveFovLH_NO call:[Result,assert,cos,sin]
perspectiveFovZO call:[perspectiveFovRH_ZO] noreturn:[perspectiveFovRH_ZO]
perspectiveFovNO call:[perspectiveFovRH_NO] noreturn:[perspectiveFovRH_NO]
perspectiveFovLH call:[perspectiveFovLH_ZO] noreturn:[perspectiveFovLH_ZO]
perspectiveFovRH call:[perspectiveFovRH_ZO] noreturn:[perspectiveFovRH_ZO]
perspectiveFov call:[perspectiveFovRH_ZO] noreturn:[perspectiveFovRH_ZO]
infinitePerspectiveRH call:[Result,tan]
infinitePerspectiveLH call:[Result,T,tan]
infinitePerspective call:[infinitePerspectiveRH] noreturn:[infinitePerspectiveRH]
tweakedInfinitePerspective call:[Result,tan]
tweakedInfinitePerspective call:[tweakedInfinitePerspective] noreturn:[tweakedInfinitePerspective]
identity call:[identity] noreturn:[identity]
translate call:[Result]
rotate call:[T,axis,cos,normalize,sin,temp]
rotate_slow call:[cos,normalize,sin]
scale
scale_slow call:[Result,T]
shear
shear_slow
lookAtRH call:[Result,cross,dot,f,normalize,s,u]
lookAtLH call:[Result,cross,dot,f,normalize,s,u]
lookAt call:[lookAtRH] noreturn:[lookAtRH]
stbi__start_mem
stbi__start_callbacks call:[sizeof,stbi__refill_buffer]
stbi__stdio_read call:[fread,return] noreturn:[fread]
stbi__stdio_skip call:[fgetc,fseek,ungetc] noreturn:[ungetc]
stbi__stdio_eof call:[feof,ferror] noreturn:[ferror]
stbi__start_file global:[stbi__stdio_callbacks] call:[stbi__start_callbacks] noreturn:[stbi__start_callbacks]
stbi__rewind
stbi_failure_reason global:[stbi__g_failure_reason]
stbi__err global:[stbi__g_failure_reason]
stbi__malloc call:[malloc] noreturn:[malloc]
stbi__addsizes_valid
stbi__mul2sizes_valid
stbi__mad2sizes_valid call:[stbi__addsizes_valid,stbi__mul2sizes_valid] noreturn:[stbi__addsizes_valid]
stbi__mad3sizes_valid call:[stbi__addsizes_valid,stbi__mul2sizes_valid] noreturn:[stbi__addsizes_valid]
stbi__mad4sizes_valid call:[stbi__addsizes_valid,stbi__mul2sizes_valid] noreturn:[stbi__addsizes_valid]
stbi__malloc_mad2 call:[stbi__mad2sizes_valid,stbi__malloc] noreturn:[stbi__malloc]
stbi__malloc_mad3 call:[stbi__mad3sizes_valid,stbi__malloc] noreturn:[stbi__malloc]
stbi__malloc_mad4 call:[stbi__mad4sizes_valid,stbi__malloc] noreturn:[stbi__malloc]
stbi_image_free call:[free] noreturn:[free]
stbi_set_flip_vertically_on_load global:[stbi__vertically_flip_on_load_global]
stbi_set_flip_vertically_on_load_thread global:[stbi__vertically_flip_on_load_local,stbi__vertically_flip_on_load_set]
stbi__load_main call:[memset,return,sizeof,stbi__bmp_load,stbi__bmp_test,stbi__err,stbi__gif_load,stbi__gif_test,stbi__hdr_load,stbi__hdr_test,stbi__hdr_to_ldr,stbi__jpeg_load,stbi__jpeg_test,stbi__pic_load,stbi__pic_test,stbi__png_load,stbi__png_test,stbi__pnm_load,stbi__pnm_test,stbi__psd_load,stbi__psd_test,stbi__tga_load,stbi__tga_test] noreturn:[return,stbi__bmp_load,stbi__gif_load,stbi__hdr_to_ldr,stbi__jpeg_load,stbi__pic_load,stbi__png_load,stbi__pnm_load,stbi__psd_load,stbi__tga_load]
stbi__convert_16_to_8 call:[free,return,stbi__err,stbi__malloc] noreturn:[return]
stbi__convert_8_to_16 call:[free,return,stbi__err,stbi__malloc]
stbi__vertical_flip call:[memcpy,sizeof]
stbi__vertical_flip_slices call:[stbi__vertical_flip]
stbi__load_and_postprocess_8bit global:[stbi__vertically_flip_on_load_global,stbi__vertically_flip_on_load_local,stbi__vertically_flip_on_load_set] call:[assert,return,sizeof,stbi__convert_16_to_8,stbi__load_main,stbi__vertical_flip] noreturn:[stbi__vertical_flip]
stbi__load_and_postprocess_16bit global:[stbi__vertically_flip_on_load_global,stbi__vertically_flip_on_load_local,stbi__vertically_flip_on_load_set] call:[assert,return,sizeof,stbi__convert_8_to_16,stbi__load_main,stbi__vertical_flip] noreturn:[stbi__vertical_flip]
stbi__float_postprocess global:[stbi__vertically_flip_on_load_global,stbi__vertically_flip_on_load_local,stbi__vertically_flip_on_load_set] call:[sizeof,stbi__vertical_flip] noreturn:[stbi__vertical_flip]
stbi__fopen call:[fopen_s]
stbi_load call:[fclose,return,stbi__err,stbi__fopen,stbi_load_from_file] noreturn:[return]
stbi_load_from_file call:[fseek,stbi__load_and_postprocess_8bit,stbi__start_file] noreturn:[fseek]
stbi_load_from_file_16 call:[fseek,stbi__load_and_postprocess_16bit,stbi__start_file] noreturn:[fseek]
stbi_load_16 call:[fclose,return,stbi__err,stbi__fopen,stbi_load_from_file_16]
stbi_load_16_from_memory call:[stbi__load_and_postprocess_16bit,stbi__start_mem] noreturn:[stbi__load_and_postprocess_16bit]
stbi_load_16_from_callbacks call:[stbi__load_and_postprocess_16bit,stbi__start_callbacks] noreturn:[stbi__load_and_postprocess_16bit]
stbi_load_from_memory call:[stbi__load_and_postprocess_8bit,stbi__start_mem] noreturn:[stbi__load_and_postprocess_8bit]
stbi_load_from_callbacks call:[stbi__load_and_postprocess_8bit,stbi__start_callbacks] noreturn:[stbi__load_and_postprocess_8bit]
stbi_load_gif_from_memory global:[stbi__vertically_flip_on_load_global,stbi__vertically_flip_on_load_local,stbi__vertically_flip_on_load_set] call:[stbi__load_gif_main,stbi__start_mem,stbi__vertical_flip_slices] noreturn:[stbi__vertical_flip_slices]
stbi__loadf_main call:[return,stbi__err,stbi__float_postprocess,stbi__hdr_load,stbi__hdr_test,stbi__ldr_to_hdr,stbi__load_and_postprocess_8bit] noreturn:[return,stbi__float_postprocess,stbi__ldr_to_hdr]
stbi_loadf_from_memory call:[stbi__loadf_main,stbi__start_mem] noreturn:[stbi__loadf_main]
stbi_loadf_from_callbacks call:[stbi__loadf_main,stbi__start_callbacks] noreturn:[stbi__loadf_main]
stbi_loadf call:[fclose,return,stbi__err,stbi__fopen,stbi_loadf_from_file] noreturn:[return]
stbi_loadf_from_file call:[stbi__loadf_main,stbi__start_file] noreturn:[stbi__loadf_main]
stbi_is_hdr_from_memory call:[stbi__hdr_test,stbi__start_mem] noreturn:[stbi__hdr_test]
stbi_is_hdr call:[fclose,stbi__fopen,stbi_is_hdr_from_file] noreturn:[fclose]
stbi_is_hdr_from_file call:[fseek,ftell,stbi__hdr_test,stbi__start_file]
stbi_is_hdr_from_callbacks call:[stbi__hdr_test,stbi__start_callbacks] noreturn:[stbi__hdr_test]
stbi_ldr_to_hdr_gamma global:[stbi__l2h_gamma]
stbi_ldr_to_hdr_scale global:[stbi__l2h_scale]
stbi_hdr_to_ldr_gamma global:[stbi__h2l_gamma_i]
stbi_hdr_to_ldr_scale global:[stbi__h2l_scale_i]
stbi__refill_buffer
stbi__get8 call:[stbi__refill_buffer]
stbi__at_eof call:[eof]
stbi__skip call:[skip]
stbi__getn call:[memcpy]
stbi__get16be call:[return,stbi__get8] noreturn:[stbi__get8]
stbi__get32be call:[return,stbi__get16be] noreturn:[stbi__get16be]
stbi__get16le call:[stbi__get8]
stbi__get32le call:[stbi__get16le]
stbi__compute_y call:[return]
stbi__convert_format call:[assert,case,free,return,stbi__compute_y,stbi__err,stbi__malloc_mad3] noreturn:[return,stbi__compute_y]
stbi__compute_y_16 call:[return]
stbi__convert_format16 call:[assert,case,free,return,stbi__compute_y_16,stbi__err,stbi__malloc] noreturn:[stbi__compute_y_16]
stbi__ldr_to_hdr global:[stbi__l2h_gamma,stbi__l2h_scale] call:[free,pow,return,sizeof,stbi__err,stbi__malloc_mad4] noreturn:[return]
stbi__hdr_to_ldr global:[stbi__h2l_gamma_i,stbi__h2l_scale_i] call:[free,pow,return,stbi__err,stbi__malloc_mad3] noreturn:[return]
stbi__build_huffman call:[memset,stbi__err] noreturn:[stbi__err]
stbi__build_fast_ac
stbi__grow_buffer_unsafe call:[stbi__get8,while] noreturn:[stbi__get8,while]
stbi__jpeg_huff_decode global:[stbi__bmask] call:[assert,stbi__grow_buffer_unsafe] noreturn:[stbi__grow_buffer_unsafe]
stbi__extend_receive global:[stbi__bmask,stbi__jbias] call:[_lrotl,stbi__grow_buffer_unsafe] noreturn:[stbi__grow_buffer_unsafe]
stbi__jpeg_get_bits global:[stbi__bmask] call:[_lrotl,stbi__grow_buffer_unsafe] noreturn:[stbi__grow_buffer_unsafe]
stbi__jpeg_get_bit call:[stbi__grow_buffer_unsafe] noreturn:[stbi__grow_buffer_unsafe]
stbi__jpeg_decode_block global:[stbi__jpeg_dezigzag] call:[memset,sizeof,stbi__err,stbi__extend_receive,stbi__grow_buffer_unsafe,stbi__jpeg_huff_decode,while] noreturn:[stbi__err,stbi__grow_buffer_unsafe]
stbi__jpeg_decode_block_prog_dc call:[memset,sizeof,stbi__err,stbi__extend_receive,stbi__grow_buffer_unsafe,stbi__jpeg_get_bit,stbi__jpeg_huff_decode] noreturn:[stbi__err,stbi__grow_buffer_unsafe]
stbi__jpeg_decode_block_prog_ac global:[stbi__jpeg_dezigzag] call:[stbi__err,stbi__extend_receive,stbi__grow_buffer_unsafe,stbi__jpeg_get_bit,stbi__jpeg_get_bits,stbi__jpeg_huff_decode,while] noreturn:[stbi__err,stbi__grow_buffer_unsafe,stbi__jpeg_get_bits,while]
stbi__clamp call:[return]
stbi__idct_block call:[stbi__clamp] noreturn:[stbi__clamp]
stbi__get_marker call:[stbi__get8] noreturn:[stbi__get8]
stbi__jpeg_reset
stbi__parse_entropy_coded_data call:[idct_block_kernel,stbi__grow_buffer_unsafe,stbi__jpeg_decode_block,stbi__jpeg_decode_block_prog_ac,stbi__jpeg_decode_block_prog_dc,stbi__jpeg_reset] noreturn:[idct_block_kernel,stbi__grow_buffer_unsafe,stbi__jpeg_reset]
stbi__jpeg_dequantize
stbi__jpeg_finish call:[idct_block_kernel,stbi__jpeg_dequantize] noreturn:[idct_block_kernel]
stbi__process_marker global:[stbi__jpeg_dezigzag] call:[stbi__build_fast_ac,stbi__build_huffman,stbi__err,stbi__get16be,stbi__get8,stbi__skip] noreturn:[stbi__build_fast_ac,stbi__err,stbi__get8]
stbi__process_scan_header call:[stbi__err,stbi__get16be,stbi__get8] noreturn:[stbi__err]
stbi__free_jpeg_components call:[free]
stbi__process_frame_header call:[sizeof,stbi__err,stbi__free_jpeg_components,stbi__get16be,stbi__get8,stbi__mad3sizes_valid,stbi__malloc_mad2,stbi__malloc_mad3] noreturn:[stbi__err,stbi__free_jpeg_components]
stbi__decode_jpeg_header call:[stbi__at_eof,stbi__err,stbi__get_marker,stbi__process_frame_header,stbi__process_marker] noreturn:[stbi__err,stbi__get_marker]
stbi__decode_jpeg_image call:[stbi__at_eof,stbi__decode_jpeg_header,stbi__err,stbi__get16be,stbi__get8,stbi__get_marker,stbi__jpeg_finish,stbi__parse_entropy_coded_data,stbi__process_marker,stbi__process_scan_header] noreturn:[stbi__err,stbi__get_marker,stbi__jpeg_finish]
resample_row_1
stbi__resample_row_v_2
stbi__resample_row_h_2
stbi__resample_row_hv_2
stbi__resample_row_generic
stbi__YCbCr_to_RGB_row
stbi__setup_jpeg
stbi__cleanup_jpeg call:[stbi__free_jpeg_components] noreturn:[stbi__free_jpeg_components]
stbi__blinn_8x8 call:[return]
load_jpeg_image call:[YCbCr_to_RGB_kernel,resample,return,stbi__blinn_8x8,stbi__cleanup_jpeg,stbi__compute_y,stbi__decode_jpeg_image,stbi__err,stbi__malloc,stbi__malloc_mad3] noreturn:[YCbCr_to_RGB_kernel,return,stbi__compute_y]
stbi__jpeg_load call:[free,load_jpeg_image,return,sizeof,stbi__err,stbi__malloc,stbi__setup_jpeg] noreturn:[return]
stbi__jpeg_test call:[free,sizeof,stbi__decode_jpeg_header,stbi__err,stbi__malloc,stbi__rewind,stbi__setup_jpeg] noreturn:[stbi__err]
stbi__jpeg_info_raw call:[stbi__decode_jpeg_header,stbi__rewind]
stbi__jpeg_info call:[free,sizeof,stbi__err,stbi__jpeg_info_raw,stbi__malloc] noreturn:[stbi__err]
stbi__bitreverse16
stbi__bit_reverse call:[assert,stbi__bitreverse16]
stbi__zbuild_huffman call:[memset,sizeof,stbi__bit_reverse,stbi__err] noreturn:[stbi__err]
stbi__zeof call:[return] noreturn:[return]
stbi__zget8 call:[stbi__zeof]
stbi__fill_bits call:[stbi__zget8,while] noreturn:[while]
stbi__zreceive call:[stbi__fill_bits] noreturn:[stbi__fill_bits]
stbi__zhuffman_decode_slowpath call:[stbi__bit_reverse]
stbi__zhuffman_decode call:[stbi__fill_bits,stbi__zeof,stbi__zhuffman_decode_slowpath] noreturn:[stbi__fill_bits,stbi__zhuffman_decode_slowpath]
stbi__zexpand call:[realloc,stbi__err] noreturn:[stbi__err]
stbi__parse_huffman_block global:[stbi__zdist_base,stbi__zdist_extra,stbi__zlength_base,stbi__zlength_extra] call:[stbi__err,stbi__zexpand,stbi__zhuffman_decode,stbi__zreceive,while] noreturn:[stbi__err,stbi__zreceive,while]
stbi__compute_huffman_codes call:[memset,sizeof,stbi__err,stbi__zbuild_huffman,stbi__zhuffman_decode,stbi__zreceive] noreturn:[stbi__err]
stbi__parse_uncompressed_block call:[memcpy,stbi__err,stbi__zexpand,stbi__zget8,stbi__zreceive] noreturn:[stbi__err,stbi__zget8,stbi__zreceive]
stbi__parse_zlib_header call:[stbi__err,stbi__zeof,stbi__zget8] noreturn:[stbi__err]
stbi__parse_zlib global:[stbi__zdefault_distance,stbi__zdefault_length] call:[stbi__compute_huffman_codes,stbi__parse_huffman_block,stbi__parse_uncompressed_block,stbi__parse_zlib_header,stbi__zbuild_huffman,stbi__zreceive,while]
stbi__do_zlib call:[stbi__parse_zlib] noreturn:[stbi__parse_zlib]
stbi_zlib_decode_malloc_guesssize call:[free,stbi__do_zlib,stbi__malloc]
stbi_zlib_decode_malloc call:[stbi_zlib_decode_malloc_guesssize] noreturn:[stbi_zlib_decode_malloc_guesssize]
stbi_zlib_decode_malloc_guesssize_headerflag call:[free,stbi__do_zlib,stbi__malloc]
stbi_zlib_decode_buffer call:[return,stbi__do_zlib]
stbi_zlib_decode_noheader_malloc call:[free,stbi__do_zlib,stbi__malloc]
stbi_zlib_decode_noheader_buffer call:[return,stbi__do_zlib]
stbi__get_chunk_header call:[stbi__get32be]
stbi__check_png_header call:[stbi__err,stbi__get8] noreturn:[stbi__err]
stbi__paeth call:[abs]
stbi__create_png_image_raw global:[first_row_filter,stbi__depth_scale_table] call:[assert,memcpy,stbi__err,stbi__mad3sizes_valid,stbi__malloc_mad3,stbi__paeth] noreturn:[stbi__err]
stbi__create_png_image call:[free,memcpy,stbi__create_png_image_raw,stbi__err,stbi__malloc_mad3] noreturn:[memcpy,stbi__create_png_image_raw,stbi__err]
stbi__compute_transparency call:[assert]
stbi__compute_transparency16 call:[assert]
stbi__expand_png_palette call:[free,stbi__err,stbi__malloc_mad2] noreturn:[stbi__err]
stbi_set_unpremultiply_on_load global:[stbi__unpremultiply_on_load_global]
stbi_convert_iphone_png_to_rgb global:[stbi__de_iphone_flag_global]
stbi__unpremultiply_on_load_thread global:[stbi__unpremultiply_on_load_local,stbi__unpremultiply_on_load_set]
stbi_convert_iphone_png_to_rgb_thread global:[stbi__de_iphone_flag_local,stbi__de_iphone_flag_set]
stbi__de_iphone global:[stbi__unpremultiply_on_load_global,stbi__unpremultiply_on_load_local,stbi__unpremultiply_on_load_set] call:[assert]
stbi__parse_png_file global:[stbi__de_iphone_flag_global,stbi__de_iphone_flag_local,stbi__de_iphone_flag_set,stbi__depth_scale_table] call:[case,free,realloc,stbi__check_png_header,stbi__compute_transparency,stbi__compute_transparency16,stbi__create_png_image,stbi__de_iphone,stbi__err,stbi__expand_png_palette,stbi__get16be,stbi__get32be,stbi__get8,stbi__get_chunk_header,stbi__getn,stbi__skip,stbi_zlib_decode_malloc_guesssize_headerflag] noreturn:[stbi__de_iphone,stbi__err,stbi__get16be,stbi__get32be,stbi__get8]
stbi__do_png call:[free,return,stbi__convert_format,stbi__convert_format16,stbi__err,stbi__parse_png_file] noreturn:[return,stbi__convert_format,stbi__convert_format16]
stbi__png_load call:[stbi__do_png] noreturn:[stbi__do_png]
stbi__png_test call:[stbi__check_png_header,stbi__rewind]
stbi__png_info_raw call:[stbi__parse_png_file,stbi__rewind]
stbi__png_info call:[stbi__png_info_raw] noreturn:[stbi__png_info_raw]
stbi__png_is16 call:[stbi__png_info_raw,stbi__rewind]
stbi__bmp_test_raw call:[stbi__get16le,stbi__get32le,stbi__get8]
stbi__bmp_test call:[stbi__bmp_test_raw,stbi__rewind]
stbi__high_bit
stbi__bitcount
stbi__shiftsigned call:[assert,return]
stbi__bmp_set_mask_defaults
stbi__bmp_parse_header call:[return,stbi__bmp_set_mask_defaults,stbi__err,stbi__get16le,stbi__get32le,stbi__get8] noreturn:[return,stbi__bmp_set_mask_defaults,stbi__get16le,stbi__get32le]
stbi__bmp_load call:[abs,free,return,stbi__bitcount,stbi__bmp_parse_header,stbi__convert_format,stbi__err,stbi__get16le,stbi__get32le,stbi__get8,stbi__high_bit,stbi__mad3sizes_valid,stbi__malloc_mad3,stbi__shiftsigned,stbi__skip] noreturn:[return,stbi__get8,stbi__skip]
stbi__tga_get_comp
stbi__tga_info call:[stbi__get16le,stbi__get8,stbi__rewind,stbi__skip,stbi__tga_get_comp] noreturn:[stbi__tga_get_comp]
stbi__tga_test call:[stbi__get16le,stbi__get8,stbi__rewind,stbi__skip] noreturn:[stbi__skip]
stbi__tga_read_rgb16 call:[stbi__get16le]
stbi__tga_load call:[assert,free,return,stbi__convert_format,stbi__err,stbi__get16le,stbi__get8,stbi__getn,stbi__mad3sizes_valid,stbi__malloc_mad2,stbi__malloc_mad3,stbi__skip,stbi__tga_get_comp,stbi__tga_read_rgb16] noreturn:[free,return,stbi__convert_format,stbi__get8,stbi__getn,stbi__tga_get_comp,stbi__tga_read_rgb16]
stbi__psd_test call:[stbi__get32be,stbi__rewind]
stbi__psd_decode_rle call:[stbi__get8]
stbi__psd_load call:[free,return,stbi__convert_format,stbi__convert_format16,stbi__err,stbi__get16be,stbi__get32be,stbi__get8,stbi__mad3sizes_valid,stbi__malloc,stbi__malloc_mad3,stbi__psd_decode_rle,stbi__skip] noreturn:[return,stbi__convert_format,stbi__convert_format16,stbi__get16be,stbi__get8,stbi__malloc]
stbi__pic_is4 call:[stbi__get8]
stbi__pic_test_core call:[stbi__get8,stbi__pic_is4] noreturn:[stbi__get8]
stbi__readval call:[return,stbi__at_eof,stbi__err,stbi__get8] noreturn:[return,stbi__get8]
stbi__copyval
stbi__pic_load_core call:[return,sizeof,stbi__at_eof,stbi__copyval,stbi__err,stbi__get16be,stbi__get8,stbi__readval,while] noreturn:[return,stbi__copyval,stbi__get16be]
stbi__pic_load call:[free,memset,return,stbi__at_eof,stbi__convert_format,stbi__err,stbi__get16be,stbi__get32be,stbi__get8,stbi__mad3sizes_valid,stbi__malloc_mad3,stbi__pic_load_core] noreturn:[return,stbi__get8]
stbi__pic_test call:[stbi__pic_test_core,stbi__rewind]
stbi__gif_test_raw call:[stbi__get8]
stbi__gif_test call:[stbi__gif_test_raw,stbi__rewind]
stbi__gif_parse_colortable call:[stbi__get8]
stbi__gif_header global:[stbi__g_failure_reason] call:[stbi__err,stbi__get16le,stbi__get8,stbi__gif_parse_colortable] noreturn:[stbi__err,stbi__gif_parse_colortable]
stbi__gif_info_raw call:[free,sizeof,stbi__err,stbi__gif_header,stbi__malloc,stbi__rewind] noreturn:[stbi__err]
stbi__out_gif_code call:[stbi__out_gif_code] noreturn:[stbi__out_gif_code]
stbi__process_gif_raster call:[return,stbi__err,stbi__get8,stbi__out_gif_code,stbi__skip] noreturn:[return,stbi__skip]
stbi__gif_load_next call:[memcpy,memset,return,stbi__err,stbi__get16le,stbi__get8,stbi__gif_header,stbi__gif_parse_colortable,stbi__mad3sizes_valid,stbi__malloc,stbi__process_gif_raster,stbi__skip] noreturn:[memcpy,return,stbi__skip]
stbi__load_gif_main_outofmem call:[free,return,stbi__err] noreturn:[free,return]
stbi__load_gif_main call:[free,memcpy,memset,realloc,return,sizeof,stbi__convert_format,stbi__err,stbi__gif_load_next,stbi__gif_test,stbi__load_gif_main_outofmem,stbi__malloc,while] noreturn:[return,sizeof,stbi__convert_format,stbi__load_gif_main_outofmem]
stbi__gif_load call:[free,memset,sizeof,stbi__convert_format,stbi__gif_load_next] noreturn:[free,stbi__convert_format]
stbi__gif_info call:[stbi__gif_info_raw] noreturn:[stbi__gif_info_raw]
stbi__hdr_test_core call:[stbi__get8,stbi__rewind]
stbi__hdr_test call:[stbi__hdr_test_core,stbi__rewind] noreturn:[stbi__rewind]
stbi__hdr_gettoken call:[stbi__at_eof,stbi__get8] noreturn:[stbi__get8]
stbi__hdr_convert call:[ldexp]
stbi__hdr_load call:[free,return,sizeof,stbi__err,stbi__get8,stbi__getn,stbi__hdr_convert,stbi__hdr_gettoken,stbi__mad4sizes_valid,stbi__malloc_mad2,stbi__malloc_mad4,strcmp,strncmp,strtol] noreturn:[free,return,stbi__get8,stbi__hdr_convert]
stbi__hdr_info call:[stbi__hdr_gettoken,stbi__hdr_test,stbi__rewind,strcmp,strncmp,strtol]
stbi__bmp_info call:[stbi__bmp_parse_header,stbi__rewind]
stbi__psd_info call:[stbi__get16be,stbi__get32be,stbi__rewind,stbi__skip]
stbi__psd_is16 call:[stbi__get16be,stbi__get32be,stbi__rewind,stbi__skip]
stbi__pic_info call:[sizeof,stbi__at_eof,stbi__get16be,stbi__get8,stbi__pic_is4,stbi__rewind,stbi__skip,while]
stbi__pnm_test call:[stbi__get8,stbi__rewind]
stbi__pnm_load call:[return,stbi__convert_format,stbi__err,stbi__getn,stbi__mad4sizes_valid,stbi__malloc_mad4,stbi__pnm_info] noreturn:[return]
stbi__pnm_isspace
stbi__pnm_skip_whitespace call:[stbi__at_eof,stbi__get8,stbi__pnm_isspace] noreturn:[stbi__get8]
stbi__pnm_isdigit
stbi__pnm_getinteger call:[stbi__at_eof,stbi__get8,stbi__pnm_isdigit] noreturn:[stbi__get8]
stbi__pnm_info call:[stbi__err,stbi__get8,stbi__pnm_getinteger,stbi__pnm_skip_whitespace,stbi__rewind] noreturn:[stbi__err]
stbi__pnm_is16 call:[stbi__pnm_info]
stbi__info_main call:[stbi__bmp_info,stbi__err,stbi__gif_info,stbi__hdr_info,stbi__jpeg_info,stbi__pic_info,stbi__png_info,stbi__pnm_info,stbi__psd_info,stbi__tga_info] noreturn:[stbi__err]
stbi__is_16_main call:[stbi__png_is16,stbi__pnm_is16,stbi__psd_is16]
stbi_info call:[fclose,stbi__err,stbi__fopen,stbi_info_from_file] noreturn:[stbi__err]
stbi_info_from_file call:[fseek,ftell,stbi__info_main,stbi__start_file]
stbi_is_16_bit call:[fclose,stbi__err,stbi__fopen,stbi_is_16_bit_from_file] noreturn:[stbi__err]
stbi_is_16_bit_from_file call:[fseek,ftell,stbi__is_16_main,stbi__start_file]
stbi_info_from_memory call:[stbi__info_main,stbi__start_mem] noreturn:[stbi__info_main]
stbi_info_from_callbacks call:[stbi__info_main,stbi__start_callbacks] noreturn:[stbi__info_main]
stbi_is_16_bit_from_memory call:[stbi__is_16_main,stbi__start_mem] noreturn:[stbi__is_16_main]
stbi_is_16_bit_from_callbacks call:[stbi__is_16_main,stbi__start_callbacks] noreturn:[stbi__is_16_main]
load_texture_file call:[c_str,runtime_error,stbi_load] noreturn:[runtime_error]
choose_supported_format call:[runtime_error,vkGetPhysicalDeviceFormatProperties] noreturn:[runtime_error]
create_image_view call:[runtime_error,vkCreateImageView] noreturn:[runtime_error]
find_memory_type_index call:[vkGetPhysicalDeviceMemoryProperties]
create_image call:[find_memory_type_index,runtime_error,vkAllocateMemory,vkBindImageMemory,vkCreateImage,vkGetImageMemoryRequirements] noreturn:[runtime_error]
create_buffer call:[find_memory_type_index,runtime_error,vkAllocateMemory,vkBindBufferMemory,vkCreateBuffer,vkGetBufferMemoryRequirements] noreturn:[runtime_error,vkBindBufferMemory]
begin_command_buffer call:[vkAllocateCommandBuffers,vkBeginCommandBuffer]
end_and_submit_command_buffer call:[printf,runtime_error,vkEndCommandBuffer,vkFreeCommandBuffers,vkQueueSubmit,vkQueueWaitIdle] noreturn:[runtime_error,vkFreeCommandBuffers]
copy_buffer call:[begin_command_buffer,end_and_submit_command_buffer,vkCmdCopyBuffer] noreturn:[end_and_submit_command_buffer]
copy_image_buffer call:[begin_command_buffer,end_and_submit_command_buffer,vkCmdCopyBufferToImage] noreturn:[end_and_submit_command_buffer]
access_flags_for_image_layout call:[VkAccessFlags] noreturn:[VkAccessFlags]
pipeline_stage_for_layout
transition_image_layout call:[access_flags_for_image_layout,begin_command_buffer,end_and_submit_command_buffer,pipeline_stage_for_layout,vkCmdPipelineBarrier] noreturn:[end_and_submit_command_buffer]
transition_image_layout_for_command_buffer call:[access_flags_for_image_layout,pipeline_stage_for_layout,vkCmdPipelineBarrier] noreturn:[vkCmdPipelineBarrier]
generate_mipmaps call:[begin_command_buffer,end_and_submit_command_buffer,runtime_error,vkCmdBlitImage,vkCmdPipelineBarrier,vkGetPhysicalDeviceFormatProperties] noreturn:[end_and_submit_command_buffer,runtime_error]
align_up call:[return]
float_t < float >
operator=
negative
mantissa
exponent call:[return]
float_t < double >
operator=
negative
mantissa call:[int64]
exponent call:[int64,return]
equal call:[equal] noreturn:[equal]
equal call:[abs,lessThanEqual] noreturn:[lessThanEqual]
notEqual call:[notEqual] noreturn:[notEqual]
notEqual call:[abs,greaterThan] noreturn:[greaterThan]
equal call:[equal] noreturn:[equal]
equal call:[Result,a,abs,b,exponent,mantissa,negative] noreturn:[exponent]
notEqual call:[notEqual] noreturn:[notEqual]
notEqual call:[equal,not_] noreturn:[not_]
dot call:[call,static_assert] noreturn:[call]
length call:[dot,sqrt] noreturn:[sqrt]
normalize call:[length]
cross
mix call:[acos,dot,mix,return,sin,static_assert] noreturn:[sin]
lerp call:[assert,static_assert]
slerp call:[acos,dot,mix,return,sin,static_assert] noreturn:[sin]
slerp call:[acos,dot,mix,return,sin,static_assert] noreturn:[sin]
conjugate
inverse call:[conjugate,dot] noreturn:[dot]
isnan call:[isnan,static_assert]
isinf call:[isinf,static_assert]
equal call:[length]
equal call:[abs,lessThan,v] noreturn:[lessThan]
notEqual call:[length]
notEqual call:[abs,greaterThanEqual,v] noreturn:[greaterThanEqual]
length
call call:[return,tmp]
call
call
call
call
call
qua
qua
qua
qua
qua call:[abs,cross,dot,normalize,sqrt] noreturn:[cross,normalize]
qua call:[T,cos,sin]
qua call:[quat_cast] noreturn:[quat_cast]
qua call:[quat_cast] noreturn:[quat_cast]
operator=
operator+= call:[call,return] noreturn:[return]
operator-= call:[call,return] noreturn:[return]
operator*= call:[p,q]
operator*= call:[call,return] noreturn:[return]
operator/= call:[call,return] noreturn:[return]
operator+
operator-
operator+
operator-
operator*
operator* call:[QuatVector,cross,uuv,uv]
operator* call:[inverse]
operator* call:[call] noreturn:[call]
operator* call:[inverse]
operator*
operator*
operator/
operator==
operator!=
angle call:[abs,acos,asin,sqrt]
axis call:[sqrt]
angleAxis call:[a,cos,sin]
rotate call:[AngleRad,abs,cos,length,sin]
epsilonEqual call:[abs]
epsilonEqual call:[abs]
epsilonEqual call:[abs,lessThan] noreturn:[lessThan]
epsilonEqual call:[abs,lessThan] noreturn:[lessThan]
epsilonNotEqual call:[abs]
epsilonNotEqual call:[abs]
epsilonNotEqual call:[abs,greaterThanEqual] noreturn:[greaterThanEqual]
epsilonNotEqual call:[abs,greaterThanEqual] noreturn:[greaterThanEqual]
epsilonEqual call:[abs,lessThan,v] noreturn:[lessThan]
epsilonNotEqual call:[abs,greaterThanEqual,v] noreturn:[greaterThanEqual]
eulerAngles call:[pitch,roll,yaw]
roll call:[all,atan,equal]
pitch call:[all,atan,equal]
yaw call:[asin,clamp] noreturn:[asin]
mat3_cast call:[Result,T,qwx,qwy,qwz,qxx,qxy,qxz,qyy,qyz,qzz]
mat4_cast call:[mat3_cast]
quat_cast call:[assert,sqrt]
quat_cast call:[quat_cast] noreturn:[quat_cast]
lessThan call:[length]
lessThanEqual call:[length]
greaterThan call:[length]
greaterThanEqual call:[length]
quatLookAt call:[quatLookAtRH] noreturn:[quatLookAtRH]
quatLookAtRH call:[cross,dot,inversesqrt,max,quat_cast] noreturn:[quat_cast]
quatLookAtLH call:[cross,dot,inversesqrt,max,quat_cast] noreturn:[quat_cast]
length
tdualquat
tdualquat
tdualquat
tdualquat
tdualquat
tdualquat call:[dualquat_cast] noreturn:[dualquat_cast]
tdualquat call:[dualquat_cast] noreturn:[dualquat_cast]
operator=
operator*=
operator/=
operator+
operator-
operator+
operator*
operator* call:[T,cross,dual_v3,real_v3,return]
operator* call:[inverse]
operator*
operator* call:[inverse]
operator*
operator*
operator/
operator== call:[return]
operator!= call:[return]
dual_quat_identity
normalize call:[length] noreturn:[length]
lerp call:[assert,dot,one]
inverse call:[conjugate,dot]
mat2x4_cast
mat3x4_cast call:[a,b,c,length2,rr]
dualquat_cast
dualquat_cast call:[T,sqrt]
hash_combine
operator() call:[hasher] noreturn:[hasher]
operator() call:[hash_combine,hasher]
operator() call:[hash_combine,hasher]
operator() call:[hash_combine,hasher]
operator() call:[hash_combine,hasher]
operator() call:[hash_combine,hasher]
operator() call:[hash_combine,hasher]
operator() call:[hash_combine,hasher]
operator() call:[hash_combine,hasher]
operator() call:[hash_combine,hasher]
operator() call:[hash_combine,hasher]
operator() call:[hash_combine,hasher]
operator() call:[hash_combine,hasher]
operator() call:[hash_combine,hasher]
operator() call:[hash_combine,hasher]
operator==
operator() call:[return] noreturn:[return]
get_camera_position
get_camera_direction call:[normalize] noreturn:[normalize]
get_up_axis
get_right_axis
get_near_plane
get_far_plane
get_fov
get_yaw
is_valid
debugCallback call:[fflush,prefix,str]
getVulkanInstance
getPhysicalDevice
getLogicalDevice
getGraphicsQueue
getComputeQueue
getPresentationQueue
getSwapChain
getNumberSwapChainImages call:[size]
getSwapChainExtent
getSwapChainFormat
getSwapChainImage
attrib_t
GetVertices
GetVertexWeights
callback_t
MaterialReader
MaterialFileReader
MaterialFileReader
MaterialStreamReader
MaterialStreamReader
ObjReaderConfig
ObjReader
Valid
GetAttrib
GetShapes
GetMaterials
Warning
Error
ImVec2
ImVec2
operator[] call:[assert,return]
operator[] call:[assert,return]
ImVec4
ImVec4
operatornew
operatordelete
IM_DELETE call:[MemFree,T] noreturn:[MemFree]
SelectAll
ClearSelection
HasSelection
ImGuiPayload call:[Clear] noreturn:[Clear]
Clear call:[memset,sizeof]
IsDataType call:[strcmp]
IsPreview
IsDelivery
ImGuiTableColumnSortSpecs call:[memset,sizeof] noreturn:[memset]
ImGuiTableSortSpecs call:[memset,sizeof] noreturn:[memset]
ImGuiOnceUponAFrame
operatorbool call:[GetFrameCount]
Clear call:[Build] noreturn:[Build]
IsActive call:[empty] noreturn:[empty]
ImGuiTextRange
ImGuiTextRange
empty
ImGuiTextBuffer
operator[] call:[assert]
begin call:[front]
end call:[back]
size
empty
clear call:[clear] noreturn:[clear]
reserve call:[reserve] noreturn:[reserve]
c_str
ImGuiStoragePair
ImGuiStoragePair
ImGuiStoragePair
Clear call:[clear] noreturn:[clear]
ImGuiListClipper call:[Begin,memset,sizeof] noreturn:[Begin]
ImColor
ImColor
ImColor
ImColor
ImColor
operatorint call:[ColorConvertFloat4ToU32] noreturn:[ColorConvertFloat4ToU32]
operatorImVec4
SetHSV call:[ColorConvertHSVtoRGB]
HSV call:[ColorConvertHSVtoRGB,ImColor] noreturn:[ImColor]
ImDrawCmd call:[memset,sizeof] noreturn:[memset]
GetTexID
ImDrawListSplitter call:[memset,sizeof] noreturn:[memset]
ImDrawListSplitter call:[ClearFreeMemory] noreturn:[ClearFreeMemory]
Clear
ImDrawList call:[memset,sizeof]
ImDrawList call:[_ClearFreeMemory] noreturn:[_ClearFreeMemory]
GetClipRectMin call:[ImVec2,back] noreturn:[ImVec2]
GetClipRectMax call:[ImVec2,back] noreturn:[ImVec2]
PathClear
PathLineTo call:[push_back] noreturn:[push_back]
PathLineToMergeDuplicate call:[memcmp,push_back] noreturn:[push_back]
PathFillConvex call:[AddConvexPolyFilled]
PathStroke call:[AddPolyline]
ChannelsSplit call:[Split] noreturn:[Split]
ChannelsMerge call:[Merge] noreturn:[Merge]
ChannelsSetCurrent call:[SetCurrentChannel] noreturn:[SetCurrentChannel]
PrimWriteVtx
PrimWriteIdx
PrimVtx call:[PrimWriteIdx,PrimWriteVtx] noreturn:[PrimWriteVtx]
AddBezierCurve call:[AddBezierCubic] noreturn:[AddBezierCubic]
PathBezierCurveTo call:[PathBezierCubicCurveTo] noreturn:[PathBezierCubicCurveTo]
ImDrawData call:[Clear] noreturn:[Clear]
Clear call:[memset,sizeof] noreturn:[memset]
ImFontGlyphRangesBuilder call:[Clear] noreturn:[Clear]
Clear call:[memset,resize,sizeof] noreturn:[memset]
GetBit call:[return]
SetBit
AddChar call:[SetBit] noreturn:[SetBit]
ImFontAtlasCustomRect call:[ImVec2]
IsPacked
IsBuilt
SetTexID
GetCustomRectByIndex call:[assert]
GetCharAdvance call:[return]
IsLoaded
GetDebugName
ImGuiViewport call:[memset,sizeof] noreturn:[memset]
GetCenter call:[ImVec2] noreturn:[ImVec2]
GetWorkCenter call:[ImVec2] noreturn:[ImVec2]
ImGuiPlatformImeData call:[memset,sizeof] noreturn:[memset]
GetWindowContentRegionWidth call:[GetWindowContentRegionMax,GetWindowContentRegionMin]
ListBoxHeader call:[BeginListBox] noreturn:[BeginListBox]
ListBoxFooter call:[EndListBox] noreturn:[EndListBox]
OpenPopupContextItem call:[OpenPopupOnItemClick] noreturn:[OpenPopupOnItemClick]
DragFloat call:[DragScalar] noreturn:[DragScalar]
DragFloat2 call:[DragScalarN] noreturn:[DragScalarN]
DragFloat3 call:[DragScalarN] noreturn:[DragScalarN]
DragFloat4 call:[DragScalarN] noreturn:[DragScalarN]
SliderFloat call:[SliderScalar] noreturn:[SliderScalar]
SliderFloat2 call:[SliderScalarN] noreturn:[SliderScalarN]
SliderFloat3 call:[SliderScalarN] noreturn:[SliderScalarN]
SliderFloat4 call:[SliderScalarN] noreturn:[SliderScalarN]
BeginPopupContextWindow call:[BeginPopupContextWindow] noreturn:[BeginPopupContextWindow]
ImGui_ImplVulkanH_Window call:[memset,sizeof]
getGuiSceneSharedVars
getGuiRendererSharedVars
getGuiSceneSharedVars
App
run call:[clean_up,dragon_model,drawFrame,get,get_keys,get_should_close,get_x_change,get_y_change,glfwGetTime,glfwPollEvents,key_control,mouse_control,render,updateStateDueToUserInput,update_model_matrix,update_uniforms,update_user_input] noreturn:[drawFrame]
App
ImVector < unsigned short >
ImVector < unsigned short > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < unsigned short > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear,short] noreturn:[clear,short]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTextRange >
ImVector < ImGuiTextRange > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiTextRange > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTextRange,clear] noreturn:[ImGuiTextRange,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < char >
ImVector < char > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < char > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[char,clear] noreturn:[char,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiStoragePair >
ImVector < ImGuiStoragePair > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImGuiStoragePair > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiStoragePair,clear] noreturn:[ImGuiStoragePair,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImDrawCmd >
ImVector < ImDrawCmd > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImDrawCmd > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImDrawCmd,clear] noreturn:[ImDrawCmd,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImDrawChannel >
ImVector < ImDrawChannel > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImDrawChannel > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImDrawChannel,clear] noreturn:[ImDrawChannel,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImDrawVert >
ImVector < ImDrawVert > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImDrawVert > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImDrawVert,clear] noreturn:[ImDrawVert,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImVec4 >
ImVector < ImVec4 > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImVec4 > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImVec4,clear] noreturn:[ImVec4,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < void * >
ImVector < void * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < void * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImVec2 >
ImVector < ImVec2 > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImVec2 > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImVec2,clear] noreturn:[ImVec2,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < unsigned int >
ImVector < unsigned int > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < unsigned int > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear,int] noreturn:[clear,int]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImFont * >
ImVector < ImFont * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImFont * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImFontAtlasCustomRect >
ImVector < ImFontAtlasCustomRect > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImFontAtlasCustomRect > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImFontAtlasCustomRect,clear] noreturn:[ImFontAtlasCustomRect,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImFontConfig >
ImVector < ImFontConfig > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImFontConfig > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImFontConfig,clear] noreturn:[ImFontConfig,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < float >
ImVector < float > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < float > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear,float] noreturn:[clear,float]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImFontGlyph >
ImVector < ImFontGlyph > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof]
ImVector < ImFontGlyph > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImFontGlyph,clear] noreturn:[ImFontGlyph,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
