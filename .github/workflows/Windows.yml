name: Windows build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  ACTIONS_STEP_DEBUG: true
  ACTIONS_RUNNER_DEBUG: true
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  BUILD_DIR: build
  VK_SDK_PATH: C:\VulkanSDK

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2022
    env:
      VULKAN_SDK: C:\VulkanSDK\
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Vulkan
        run: |
          $ver = (Invoke-WebRequest -Uri "https://vulkan.lunarg.com/sdk/latest.json" | ConvertFrom-Json).windows
          echo Version $ver
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/$ver/windows/VulkanSDK-$ver-Installer.exe" -OutFile VulkanSDK.exe
          echo Downloaded
          .\VulkanSDK.exe --root C:\VulkanSDK  --accept-licenses --default-answer --confirm-command install
      - name: Cmake Build
        run: |
          mkdir build
          cd build
          cmake --preset x64-Clang-Windows-CI ../
          cmake --build . --target ALL_BUILD --verbose
